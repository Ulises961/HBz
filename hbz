--
-- PostgreSQL database dump
--

-- Dumped from database version 12.6 (Ubuntu 12.6-0ubuntu0.20.04.1)
-- Dumped by pg_dump version 12.6 (Ubuntu 12.6-0ubuntu0.20.04.1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: filetype; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE public.filetype AS ENUM (
    'png',
    'jpeg',
    'jpg'
);


ALTER TYPE public.filetype OWNER TO postgres;

--
-- Name: insertanswer(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.insertanswer() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE question RECORD;
DECLARE article RECORD;
BEGIN
    SELECT EXISTS( SELECT * FROM Question WHERE id  = NEW.id) INTO question;
    SELECT EXISTS( SELECT * FROM Article WHERE id  = NEW.id) INTO article;

    IF question.exists OR article.exists THEN 
        RETURN NULL;
    ELSE
        RETURN NEW;
    END IF;
END;
$$;


ALTER FUNCTION public.insertanswer() OWNER TO postgres;

--
-- Name: insertarticle(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.insertarticle() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE answer RECORD;
DECLARE question RECORD;
BEGIN
    SELECT EXISTS( SELECT * FROM Question WHERE id  = NEW.id) INTO question;
    SELECT EXISTS( SELECT * FROM Answer WHERE id  = NEW.id) INTO answer;

    IF question.exists OR answer.exists THEN 
        RETURN NULL;
    ELSE
        RETURN NEW;
    END IF;
END;
$$;


ALTER FUNCTION public.insertarticle() OWNER TO postgres;

--
-- Name: insertprofessor(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.insertprofessor() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE student RECORD;
BEGIN
    SELECT EXISTS( SELECT * FROM Student WHERE id  = NEW.id) INTO student;
  
    IF student.exists THEN
        RETURN NULL;
    ELSE
        RETURN NEW;
    END IF;
END;
$$;


ALTER FUNCTION public.insertprofessor() OWNER TO postgres;

--
-- Name: insertquestion(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.insertquestion() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE answer RECORD;
DECLARE article RECORD;
BEGIN
    SELECT EXISTS( SELECT * FROM Answer WHERE id  = NEW.id) INTO answer;
    SELECT EXISTS( SELECT * FROM Article WHERE id  = NEW.id) INTO article;

    IF article.exists OR answer.exists THEN 
        RETURN NULL;
    ELSE
        RETURN NEW;
    END IF;
END;
$$;


ALTER FUNCTION public.insertquestion() OWNER TO postgres;

--
-- Name: insertstudent(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.insertstudent() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE professor RECORD;
BEGIN
    SELECT EXISTS( SELECT * FROM Professor WHERE id = NEW.id) INTO professor;

    IF professor.exists THEN 
        RETURN NULL;
    ELSE
        RETURN NEW;
    END IF;
END;
$$;


ALTER FUNCTION public.insertstudent() OWNER TO postgres;

--
-- Name: is_user_logged_in(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.is_user_logged_in() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE active_session RECORD;
BEGIN
    SELECT EXISTS( SELECT * FROM Session WHERE id = NEW.users AND end_time IS NOT NULL AND date = CURRENT_DATE  ) INTO active_session;

    IF active_session.exists THEN 
        RETURN NEW;
    ELSE
        RAISE EXCEPTION 'You must be logged in to do the requested operation';
        RETURN NULL;
    END IF;
END;
$$;


ALTER FUNCTION public.is_user_logged_in() OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: answer; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.answer (
    id integer NOT NULL,
    question_id integer
);


ALTER TABLE public.answer OWNER TO postgres;

--
-- Name: article; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.article (
    id integer NOT NULL,
    validity date NOT NULL,
    price numeric NOT NULL
);


ALTER TABLE public.article OWNER TO postgres;

--
-- Name: comment; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.comment (
    id integer NOT NULL,
    date date NOT NULL,
    "time" time without time zone NOT NULL,
    text character varying(255) NOT NULL,
    users integer NOT NULL,
    post integer NOT NULL
);


ALTER TABLE public.comment OWNER TO postgres;

--
-- Name: comment_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.comment_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.comment_id_seq OWNER TO postgres;

--
-- Name: comment_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.comment_id_seq OWNED BY public.comment.id;


--
-- Name: conversation; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.conversation (
    id integer NOT NULL,
    name character varying(255) NOT NULL
);


ALTER TABLE public.conversation OWNER TO postgres;

--
-- Name: conversation_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.conversation_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.conversation_id_seq OWNER TO postgres;

--
-- Name: conversation_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.conversation_id_seq OWNED BY public.conversation.id;


--
-- Name: faculty; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.faculty (
    code integer NOT NULL,
    name character varying(100) NOT NULL
);


ALTER TABLE public.faculty OWNER TO postgres;

--
-- Name: faculty_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.faculty_code_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.faculty_code_seq OWNER TO postgres;

--
-- Name: faculty_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.faculty_code_seq OWNED BY public.faculty.code;


--
-- Name: hastag; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.hastag (
    tag integer NOT NULL,
    post integer NOT NULL
);


ALTER TABLE public.hastag OWNER TO postgres;

--
-- Name: partecipatesinconversation; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.partecipatesinconversation (
    conversation integer NOT NULL,
    users integer NOT NULL
);


ALTER TABLE public.partecipatesinconversation OWNER TO postgres;

--
-- Name: photo; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.photo (
    id integer NOT NULL,
    description text,
    url text NOT NULL,
    extension public.filetype NOT NULL,
    size numeric NOT NULL,
    article integer NOT NULL
);


ALTER TABLE public.photo OWNER TO postgres;

--
-- Name: photo_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.photo_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.photo_id_seq OWNER TO postgres;

--
-- Name: photo_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.photo_id_seq OWNED BY public.photo.id;


--
-- Name: post; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.post (
    id integer NOT NULL,
    users integer NOT NULL,
    date date NOT NULL,
    "time" time without time zone NOT NULL,
    title character varying(255) NOT NULL,
    text text NOT NULL
);


ALTER TABLE public.post OWNER TO postgres;

--
-- Name: post_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.post_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.post_id_seq OWNER TO postgres;

--
-- Name: post_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.post_id_seq OWNED BY public.post.id;


--
-- Name: professor; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.professor (
    id integer NOT NULL,
    office_hours character varying(200),
    office character varying(8)
);


ALTER TABLE public.professor OWNER TO postgres;

--
-- Name: program; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.program (
    code integer NOT NULL,
    name character varying(100) NOT NULL,
    duration numeric NOT NULL,
    faculty integer
);


ALTER TABLE public.program OWNER TO postgres;

--
-- Name: program_code_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.program_code_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.program_code_seq OWNER TO postgres;

--
-- Name: program_code_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.program_code_seq OWNED BY public.program.code;


--
-- Name: question; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.question (
    id integer NOT NULL
);


ALTER TABLE public.question OWNER TO postgres;

--
-- Name: sendsmessageto; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.sendsmessageto (
    id integer NOT NULL,
    date date NOT NULL,
    "time" time without time zone NOT NULL,
    text character varying(255) NOT NULL,
    users integer NOT NULL,
    conversation integer NOT NULL
);


ALTER TABLE public.sendsmessageto OWNER TO postgres;

--
-- Name: sendsmessageto_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.sendsmessageto_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sendsmessageto_id_seq OWNER TO postgres;

--
-- Name: sendsmessageto_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.sendsmessageto_id_seq OWNED BY public.sendsmessageto.id;


--
-- Name: session; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.session (
    id integer NOT NULL,
    date date NOT NULL,
    start_time time without time zone NOT NULL,
    end_time time without time zone,
    users integer NOT NULL
);


ALTER TABLE public.session OWNER TO postgres;

--
-- Name: session_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.session_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.session_id_seq OWNER TO postgres;

--
-- Name: session_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.session_id_seq OWNED BY public.session.id;


--
-- Name: student; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.student (
    id integer NOT NULL,
    program integer NOT NULL
);


ALTER TABLE public.student OWNER TO postgres;

--
-- Name: subject; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.subject (
    id integer NOT NULL,
    ects numeric,
    name character varying(300),
    CONSTRAINT subject_ects_check CHECK ((((ects >= (0)::numeric) AND (ects <= (40)::numeric)) OR (ects = ('-1'::integer)::numeric)))
);


ALTER TABLE public.subject OWNER TO postgres;

--
-- Name: subject_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.subject_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.subject_id_seq OWNER TO postgres;

--
-- Name: subject_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.subject_id_seq OWNED BY public.subject.id;


--
-- Name: tag; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.tag (
    id integer NOT NULL,
    name character varying(25) NOT NULL
);


ALTER TABLE public.tag OWNER TO postgres;

--
-- Name: tag_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.tag_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.tag_id_seq OWNER TO postgres;

--
-- Name: tag_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.tag_id_seq OWNED BY public.tag.id;


--
-- Name: taught_in; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.taught_in (
    subject integer NOT NULL,
    program integer NOT NULL
);


ALTER TABLE public.taught_in OWNER TO postgres;

--
-- Name: teaches; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.teaches (
    professor integer NOT NULL,
    subject integer NOT NULL
);


ALTER TABLE public.teaches OWNER TO postgres;

--
-- Name: users; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.users (
    id integer NOT NULL,
    name character varying(25) NOT NULL,
    surname character varying(25) NOT NULL,
    prefix character varying(20),
    number character varying(20),
    mail character varying(100) NOT NULL,
    password text NOT NULL,
    CONSTRAINT valid_mail CHECK (((mail)::text ~ '^(.+)@(.+)$'::text)),
    CONSTRAINT valid_number CHECK (((number)::text ~ '^\d{4}\s\d{6}'::text)),
    CONSTRAINT valid_prefix CHECK (((prefix)::text ~ '^\+(?:[0-9]?){1,4}'::text))
);


ALTER TABLE public.users OWNER TO postgres;

--
-- Name: users_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.users_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.users_id_seq OWNER TO postgres;

--
-- Name: users_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.users_id_seq OWNED BY public.users.id;


--
-- Name: vote; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.vote (
    id integer NOT NULL,
    date date NOT NULL,
    "time" time without time zone NOT NULL,
    value boolean NOT NULL,
    users integer NOT NULL,
    post integer NOT NULL
);


ALTER TABLE public.vote OWNER TO postgres;

--
-- Name: vote_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.vote_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.vote_id_seq OWNER TO postgres;

--
-- Name: vote_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.vote_id_seq OWNED BY public.vote.id;


--
-- Name: comment id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comment ALTER COLUMN id SET DEFAULT nextval('public.comment_id_seq'::regclass);


--
-- Name: conversation id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.conversation ALTER COLUMN id SET DEFAULT nextval('public.conversation_id_seq'::regclass);


--
-- Name: faculty code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.faculty ALTER COLUMN code SET DEFAULT nextval('public.faculty_code_seq'::regclass);


--
-- Name: photo id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.photo ALTER COLUMN id SET DEFAULT nextval('public.photo_id_seq'::regclass);


--
-- Name: post id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.post ALTER COLUMN id SET DEFAULT nextval('public.post_id_seq'::regclass);


--
-- Name: program code; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.program ALTER COLUMN code SET DEFAULT nextval('public.program_code_seq'::regclass);


--
-- Name: sendsmessageto id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sendsmessageto ALTER COLUMN id SET DEFAULT nextval('public.sendsmessageto_id_seq'::regclass);


--
-- Name: session id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.session ALTER COLUMN id SET DEFAULT nextval('public.session_id_seq'::regclass);


--
-- Name: subject id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.subject ALTER COLUMN id SET DEFAULT nextval('public.subject_id_seq'::regclass);


--
-- Name: tag id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.tag ALTER COLUMN id SET DEFAULT nextval('public.tag_id_seq'::regclass);


--
-- Name: users id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users ALTER COLUMN id SET DEFAULT nextval('public.users_id_seq'::regclass);


--
-- Name: vote id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.vote ALTER COLUMN id SET DEFAULT nextval('public.vote_id_seq'::regclass);


--
-- Data for Name: answer; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.answer (id, question_id) FROM stdin;
\.


--
-- Data for Name: article; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.article (id, validity, price) FROM stdin;
\.


--
-- Data for Name: comment; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.comment (id, date, "time", text, users, post) FROM stdin;
\.


--
-- Data for Name: conversation; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.conversation (id, name) FROM stdin;
\.


--
-- Data for Name: faculty; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.faculty (code, name) FROM stdin;
1	Computer Science
2	Design and Art
3	Economics and Management
4	Education
5	Science and Technology
\.


--
-- Data for Name: hastag; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.hastag (tag, post) FROM stdin;
\.


--
-- Data for Name: partecipatesinconversation; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.partecipatesinconversation (conversation, users) FROM stdin;
\.


--
-- Data for Name: photo; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.photo (id, description, url, extension, size, article) FROM stdin;
\.


--
-- Data for Name: post; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.post (id, users, date, "time", title, text) FROM stdin;
\.


--
-- Data for Name: professor; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.professor (id, office_hours, office) FROM stdin;
1	\N	BZ P1.11
2	Friday, 16:00 - 18:00	BZ P2.07
3	\N	BZ P3.09
5	\N	BZ P2.15
6	\N	\N
8	\N	BZ P2.17
9	\N	BZ P1.15
11	\N	BZ P2.03
12	Monday, 16:15 - 17:15	BZ P3.10
13	\N	BZ P3.06
15	\N	BZ P2.07
17	\N	BZ P3.15
18	\N	BZ P2.04
19	\N	\N
20	Tuesday, 10:00 - 12:00	\N
21	\N	\N
22	\N	\N
23	\N	\N
24	\N	\N
25	\N	BZ P1.08
26	\N	\N
27	Wednesday, 14:00 - 15:00	BZ P1.08
28	\N	\N
29	Wednesday, 10:00 - 12:00	BZ P2.01
30	\N	BZ P1.12
31	\N	BZ P3.02
32	\N	\N
33	\N	BZ P2.06
34	Friday, 10:00 - 11:00	\N
35	\N	BZ P2.02
36	\N	\N
37	\N	BZ P1.12
38	\N	\N
39	\N	\N
40	\N	\N
41	\N	BZ P2.02
42	\N	\N
43	Wednesday, 14:30 - 16:30	\N
44	Monday, 09:00 - 16:00	\N
45	\N	BZ P2.05
46	\N	\N
47	\N	\N
48	\N	\N
49	\N	\N
50	\N	\N
51	\N	\N
52	\N	\N
53	\N	\N
54	\N	\N
55	\N	\N
56	\N	\N
57	\N	\N
58	\N	\N
59	\N	\N
60	\N	BZ P1.04
61	\N	\N
62	\N	\N
63	\N	\N
64	\N	\N
65	\N	\N
66	\N	\N
67	\N	\N
68	\N	\N
69	\N	\N
70	\N	\N
71	\N	\N
72	\N	\N
73	\N	\N
74	\N	\N
75	\N	\N
76	\N	\N
77	\N	\N
78	\N	\N
79	\N	\N
80	\N	\N
82	\N	\N
83	\N	\N
84	\N	\N
85	\N	\N
86	\N	\N
87	\N	\N
89	\N	\N
90	\N	\N
92	\N	\N
93	\N	\N
94	\N	\N
95	\N	\N
96	\N	\N
98	\N	\N
101	\N	\N
103	\N	\N
104	\N	\N
105	\N	\N
106	\N	\N
107	\N	\N
108	\N	\N
109	\N	\N
110	\N	\N
111	\N	\N
112	\N	\N
113	Wednesday, 18:00 - 19:00	\N
114	Wednesday, 15:00 - 17:00	\N
115	\N	\N
116	\N	\N
118	\N	\N
119	\N	\N
120	\N	\N
121	\N	\N
122	\N	\N
123	\N	\N
124	\N	\N
125	\N	\N
126	\N	\N
129	\N	\N
130	\N	\N
131	\N	\N
132	\N	\N
133	\N	\N
135	\N	\N
136	\N	\N
137	\N	\N
138	\N	\N
139	\N	\N
140	\N	\N
141	\N	\N
142	\N	\N
143	\N	\N
145	\N	\N
146	\N	\N
147	\N	\N
149	\N	\N
150	\N	\N
151	\N	\N
152	\N	\N
153	\N	\N
154	Monday, 14:00 - 18:00	\N
155	\N	\N
156	\N	\N
157	\N	\N
158	\N	\N
159	\N	\N
160	\N	\N
161	\N	\N
162	\N	\N
163	\N	\N
164	\N	\N
165	\N	\N
166	\N	\N
167	\N	\N
168	\N	\N
169	\N	\N
170	\N	\N
171	\N	\N
172	\N	\N
173	\N	\N
174	\N	\N
175	\N	\N
176	\N	\N
177	\N	\N
178	\N	\N
179	\N	\N
180	\N	\N
181	\N	\N
182	\N	\N
184	\N	\N
185	\N	\N
186	\N	\N
187	\N	\N
188	\N	\N
189	\N	\N
190	\N	\N
191	\N	\N
192	\N	\N
193	\N	\N
194	\N	\N
195	\N	\N
196	\N	\N
197	\N	\N
198	\N	\N
199	\N	\N
200	\N	\N
201	\N	\N
202	\N	\N
204	\N	\N
206	\N	\N
207	\N	\N
208	\N	\N
209	\N	\N
210	\N	\N
211	\N	\N
212	\N	\N
213	\N	\N
214	\N	\N
215	\N	\N
216	\N	\N
217	\N	\N
218	\N	\N
219	\N	\N
220	\N	\N
221	\N	\N
222	\N	\N
223	\N	\N
224	\N	\N
225	\N	\N
226	\N	\N
227	\N	\N
228	\N	\N
229	\N	\N
230	\N	\N
231	\N	\N
232	\N	\N
233	\N	\N
234	\N	\N
237	\N	\N
238	\N	\N
239	\N	\N
240	\N	\N
241	\N	\N
242	\N	\N
243	\N	\N
244	\N	\N
245	\N	\N
247	\N	\N
248	\N	\N
249	\N	\N
250	\N	\N
251	\N	\N
252	\N	\N
253	\N	\N
254	\N	\N
255	\N	\N
256	\N	\N
257	\N	\N
258	\N	\N
260	\N	\N
261	\N	\N
262	\N	\N
264	\N	\N
265	\N	\N
266	\N	\N
267	\N	\N
268	\N	\N
269	\N	\N
270	\N	\N
271	\N	\N
272	\N	\N
273	\N	\N
274	\N	\N
275	\N	\N
276	\N	\N
277	\N	\N
278	\N	\N
279	\N	\N
281	\N	\N
282	\N	\N
283	\N	\N
284	\N	\N
285	\N	\N
286	\N	\N
287	\N	\N
289	\N	\N
290	\N	\N
292	\N	\N
293	\N	\N
294	\N	\N
295	\N	\N
296	\N	\N
297	\N	\N
298	\N	\N
299	\N	\N
300	\N	\N
301	\N	\N
302	\N	\N
303	\N	\N
304	\N	\N
305	\N	\N
306	\N	\N
308	\N	\N
309	\N	\N
310	\N	\N
312	\N	\N
314	\N	\N
315	\N	\N
316	\N	\N
317	\N	\N
318	\N	\N
319	\N	\N
320	\N	\N
321	\N	\N
322	\N	\N
324	\N	\N
325	\N	\N
326	\N	\N
327	\N	\N
328	\N	\N
329	\N	\N
330	\N	\N
331	\N	\N
332	\N	\N
333	\N	\N
334	\N	\N
335	\N	\N
336	Monday, 09:00 - 09:30	\N
337	\N	\N
338	\N	\N
339	\N	\N
340	Tuesday, 18:00 - 19:00	\N
341	\N	\N
342	\N	\N
343	\N	\N
344	Tuesday, 15:00 - 16:00	\N
345	\N	\N
346	\N	\N
347	Thursday, 13:00 - 13:45	\N
348	Tuesday, 14:00 - 15:00	\N
349	Tuesday, 13:00 - 15:00	\N
350	\N	\N
351	\N	\N
352	\N	\N
353	\N	\N
354	Tuesday, 11:30 - 12:00	\N
355	Monday, 09:00 - 10:00	\N
356	Wednesday, 11:00 - 12:00	\N
358	Monday, 12:15 - 13:15	\N
360	Wednesday, 14:00 - 16:00	\N
362	Monday, 13:00 - 14:00	\N
363	\N	\N
364	\N	\N
365	\N	\N
366	Tuesday, 11:00 - 12:00	\N
367	Monday, 08:00 - 08:30	\N
368	\N	\N
369	Tuesday, 10:30 - 11:30	\N
370	Tuesday, 10:00 - 11:00	\N
372	\N	\N
373	Monday, 11:00 - 13:00	\N
374	\N	\N
375	\N	\N
376	Monday, 09:30 - 10:30	\N
377	Monday, 09:00 - 17:00	\N
378	Monday, 09:00 - 11:00	\N
379	Wednesday, 13:00 - 14:00	\N
381	Wednesday, 13:00 - 14:00	\N
382	Thursday, 11:30 - 13:30	\N
383	\N	\N
384	Monday, 10:00 - 11:00	\N
385	Wednesday, 14:00 - 16:00	\N
386	Friday, 13:00 - 14:00	\N
387	Tuesday, 10:00 - 12:00	\N
388	\N	\N
389	Monday, 08:45 - 09:45	\N
390	Thursday, 16:30 - 18:00	\N
391	Tuesday, 09:00 - 09:30	\N
392	\N	\N
393	Monday, 09:00 - 10:00	\N
394	Tuesday, 10:30 - 12:30	\N
395	\N	\N
396	Wednesday, 11:00 - 11:45	\N
397	Friday, 10:00 - 10:30	\N
398	\N	\N
399	Tuesday, 09:00 - 10:00	\N
400	Thursday, 12:00 - 13:00	\N
401	Friday, 08:00 - 09:00	\N
402	\N	\N
403	Thursday, 13:00 - 14:00	\N
404	\N	\N
405	\N	\N
406	\N	\N
407	\N	\N
408	\N	\N
409	Tuesday, 09:00 - 10:00	\N
410	Wednesday, 11:00 - 13:00	\N
411	Tuesday, 09:00 - 10:00	\N
412	\N	\N
413	\N	\N
414	\N	\N
415	\N	\N
416	\N	\N
417	\N	\N
418	\N	\N
419	\N	\N
420	\N	\N
421	\N	\N
422	\N	\N
423	\N	\N
424	\N	\N
425	\N	\N
426	\N	\N
427	\N	\N
428	\N	\N
429	\N	\N
430	\N	\N
431	\N	\N
433	\N	\N
435	\N	\N
436	\N	\N
437	\N	\N
438	\N	\N
439	\N	\N
440	\N	\N
441	\N	\N
442	\N	\N
443	\N	\N
444	\N	\N
445	\N	\N
446	\N	\N
447	\N	\N
448	\N	\N
449	\N	\N
450	\N	\N
451	\N	\N
452	\N	\N
453	\N	\N
454	\N	\N
455	\N	\N
456	\N	\N
457	\N	\N
458	\N	\N
459	\N	\N
460	\N	\N
461	\N	\N
462	\N	\N
463	\N	\N
464	\N	\N
465	\N	\N
466	\N	\N
467	\N	\N
468	\N	\N
469	\N	\N
470	\N	\N
471	\N	\N
473	\N	\N
474	\N	\N
475	\N	\N
476	\N	\N
477	\N	\N
478	\N	\N
479	\N	\N
480	\N	\N
481	\N	\N
482	\N	\N
483	\N	\N
484	\N	\N
485	\N	\N
486	\N	\N
488	\N	\N
489	\N	\N
490	\N	\N
491	\N	\N
492	\N	\N
493	\N	\N
494	\N	\N
495	\N	\N
496	\N	\N
497	\N	\N
498	\N	\N
499	\N	\N
500	\N	\N
501	\N	\N
502	\N	\N
503	\N	\N
504	\N	\N
505	\N	\N
506	\N	\N
508	\N	\N
509	\N	\N
510	\N	\N
511	\N	\N
512	\N	\N
513	\N	\N
514	\N	\N
515	\N	\N
517	\N	\N
518	\N	\N
520	\N	\N
521	\N	\N
522	\N	\N
523	\N	\N
524	\N	\N
525	\N	\N
526	\N	\N
527	\N	\N
528	\N	\N
529	\N	\N
530	\N	\N
531	\N	\N
532	\N	\N
533	\N	\N
534	\N	\N
535	\N	\N
536	\N	\N
538	\N	\N
539	\N	\N
541	\N	\N
542	\N	\N
543	\N	\N
544	\N	\N
545	\N	\N
546	\N	\N
547	\N	\N
548	\N	\N
549	\N	\N
550	\N	\N
552	\N	\N
553	\N	\N
554	\N	\N
555	\N	\N
556	\N	\N
557	\N	\N
558	\N	\N
559	\N	\N
560	\N	\N
561	\N	\N
562	\N	\N
563	\N	\N
564	\N	\N
565	\N	\N
566	\N	\N
567	\N	\N
568	\N	\N
569	\N	\N
570	\N	\N
571	\N	\N
572	\N	\N
573	Wednesday, 14:30 - 16:00	\N
575	\N	\N
576	\N	\N
577	\N	\N
578	\N	\N
579	\N	\N
580	\N	\N
581	\N	\N
582	\N	\N
583	\N	\N
584	\N	\N
585	\N	\N
586	\N	\N
587	\N	\N
588	\N	\N
589	\N	\N
591	\N	\N
593	\N	\N
594	\N	\N
595	\N	\N
596	\N	\N
597	\N	\N
598	\N	\N
599	\N	\N
600	\N	\N
602	\N	\N
603	\N	\N
604	\N	\N
605	\N	\N
606	\N	\N
607	\N	\N
608	\N	\N
609	\N	\N
610	\N	\N
611	\N	\N
612	\N	\N
613	\N	\N
614	\N	\N
615	\N	\N
616	\N	\N
617	\N	\N
618	\N	\N
619	\N	\N
620	\N	\N
621	\N	\N
622	\N	\N
623	\N	\N
624	\N	\N
625	\N	\N
626	\N	\N
627	\N	\N
628	\N	\N
629	\N	\N
630	\N	\N
631	\N	\N
632	\N	\N
633	\N	\N
634	\N	\N
635	\N	\N
636	\N	\N
637	\N	\N
638	\N	\N
639	\N	\N
640	\N	\N
641	\N	\N
642	\N	\N
643	\N	\N
644	\N	\N
645	\N	\N
646	\N	\N
647	\N	\N
648	\N	\N
649	\N	\N
650	Tuesday, 18:00 - 19:00	\N
651	\N	\N
652	\N	\N
653	\N	\N
654	\N	\N
655	\N	\N
656	\N	\N
657	\N	\N
658	\N	\N
659	Wednesday, 18:00 - 19:00	\N
660	Tuesday, 16:00 - 18:00	\N
661	\N	\N
662	\N	\N
663	\N	\N
664	\N	\N
665	\N	\N
666	\N	\N
667	\N	\N
668	\N	\N
669	\N	\N
670	\N	\N
671	\N	\N
672	\N	\N
673	\N	\N
674	\N	\N
675	\N	\N
676	\N	\N
677	\N	\N
678	\N	\N
679	\N	\N
680	\N	\N
681	\N	\N
682	\N	\N
683	\N	\N
684	Friday, 14:00 - 18:00	\N
685	\N	\N
686	\N	\N
687	\N	\N
688	\N	\N
689	Monday, 12:00 - 13:30	\N
690	\N	\N
691	\N	\N
692	\N	\N
693	\N	\N
694	\N	\N
695	\N	\N
696	\N	\N
697	\N	\N
698	\N	\N
699	\N	\N
700	\N	\N
703	\N	\N
704	\N	\N
705	\N	\N
706	\N	\N
707	\N	\N
709	\N	\N
710	\N	\N
711	\N	\N
712	\N	\N
713	\N	\N
715	\N	\N
716	\N	\N
717	\N	\N
718	\N	\N
719	\N	\N
720	\N	\N
721	\N	\N
722	\N	\N
726	\N	\N
727	\N	\N
728	\N	\N
729	\N	\N
730	\N	\N
732	\N	\N
733	\N	\N
734	\N	\N
736	\N	\N
737	\N	\N
738	\N	\N
739	\N	\N
740	\N	\N
742	\N	\N
743	\N	\N
744	\N	\N
746	\N	\N
747	\N	\N
748	\N	\N
749	\N	\N
750	\N	\N
751	\N	\N
752	\N	\N
753	\N	\N
754	\N	\N
755	\N	\N
756	\N	\N
757	\N	\N
758	\N	\N
759	\N	\N
760	\N	\N
761	\N	\N
762	\N	\N
763	\N	\N
764	\N	\N
765	\N	\N
766	\N	\N
767	\N	\N
768	\N	\N
769	\N	\N
770	\N	\N
771	\N	\N
772	\N	\N
773	\N	\N
774	\N	\N
775	\N	\N
776	\N	\N
777	\N	\N
778	\N	\N
780	\N	\N
781	\N	\N
782	\N	\N
783	\N	\N
784	\N	\N
785	\N	\N
786	\N	\N
787	\N	\N
788	\N	\N
789	\N	\N
790	\N	\N
792	\N	\N
793	\N	\N
794	\N	\N
795	\N	\N
796	\N	\N
797	\N	\N
799	\N	\N
800	\N	\N
801	\N	\N
803	\N	\N
805	\N	\N
806	\N	\N
807	\N	\N
808	\N	\N
810	\N	\N
811	\N	\N
812	\N	\N
813	\N	\N
814	\N	\N
815	\N	\N
816	\N	\N
817	\N	\N
818	\N	\N
819	\N	\N
820	\N	\N
822	\N	\N
823	\N	\N
824	\N	\N
825	\N	\N
826	\N	\N
827	\N	\N
828	\N	\N
829	\N	\N
830	\N	\N
832	\N	\N
833	\N	\N
834	\N	\N
835	\N	\N
836	\N	\N
837	\N	\N
838	\N	\N
839	\N	\N
840	\N	\N
841	\N	\N
842	\N	\N
843	\N	\N
845	\N	\N
846	\N	\N
847	\N	\N
848	\N	\N
849	\N	\N
850	\N	\N
851	\N	\N
852	\N	\N
853	\N	\N
854	\N	\N
855	\N	\N
856	\N	\N
857	\N	\N
859	\N	\N
860	\N	\N
862	\N	\N
863	\N	\N
865	\N	\N
866	\N	\N
867	\N	\N
868	\N	\N
869	\N	\N
870	\N	\N
871	\N	\N
872	\N	\N
873	\N	\N
874	\N	\N
875	\N	\N
876	\N	\N
877	\N	\N
878	\N	\N
879	\N	\N
880	\N	\N
881	\N	\N
882	\N	\N
883	\N	\N
884	\N	\N
885	\N	\N
886	Monday, 15:30 - 16:30	\N
887	\N	\N
889	\N	\N
890	\N	\N
\.


--
-- Data for Name: program; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.program (code, name, duration, faculty) FROM stdin;
1	Bachelor in Computer Science(Bachelor class: L-31)	3	1
2	Bachelor in Informatics and Management of Digital Business(Bachelor class: L-31 )	3	1
3	Master in Computational Data Science(Degree class: LM-18)	2	1
4	Software Engineering for Information Systems(Master class: LM-18)	2	1
5	PhD in Computer Science(Duration of the programme: 4 years)	1	1
6	Bachelor in Design and Art - Major in Art(Bachelor class: L-4)	3	2
7	Bachelor in Design and Art - Major in Design(Bachelor class: L-4)	3	2
8	Master in Eco-Social Design(Degree class: LM-12)	2	2
9	1st Level Master in Design for Children	2	2
10	Bachelor in Economics and Management (Bachelor class: L-18)	3	3
11	Bachelor in Economics and Social Sciences(Bachelor class: L-33)	3	3
12	Bachelor in Tourism(Bachelor class: L-18)	3	3
14	Master in Accounting and Finance(Degree class: LM-77)	2	3
15	Master in Entrepreneurship and Innovation(Degree class: LM-77)	2	3
16	Master in Public Policies and Administration(Italian degree class: LM-63)	2	3
17	PhD in Management and Economics(Duration of the programme: 4 years)	9	3
18	PhD in Management	9	3
19	PhD in Economics and Finance	9	3
20	1st Level Master in European Public Administration (Euregio)	9	3
21	Bachelor in Communication Sciences and Culture(Italian Bachelor class: L-20)	3	4
22	Bachelor in Social Education(Bachelor class: L-19)	3	4
23	Bachelor in Social Work(Bachelor class: L-39)	3	4
24	Master in Primary Education	3	4
25	Master in Applied Linguistics(Degree class: LM-39)	2	4
26	Master in Innovation and Research for Social Work and Social Education(Italian degree class: LM-87)	2	4
27	Master in Musicology(Degree class: LM-45)	2	4
28	PhD in General Pedagogy(Duration of the programme: 3 years)	5	4
29	Percorso formativo - 24 CFU	5	4
30	Specialisation course for the teaching of children with special educational needs	5	4
31	Antropolad: Further Education course in Ladin Culture and Alpine Anthropology Antropolad	5	4
32	Teaching of Children with special Needs	5	4
33	Bachelor in Agricultural(Bachelor class: L-25)	3	5
34	Bachelor in Industrial and Mechanical Engineering(Bachelor class: L-9)	3	5
35	Professional Bachelor in Wood Engineering(Bachelor class: L-9)	3	5
36	Master in Energy Engineering(Degree class: LM-30)	2	5
37	Master in Environmental Management of Mountain Areas(Degree class: LM-73)	2	5
38	Master in Food Sciences for Innovation and Authenticity(Degree class: LM-70)	2	5
39	Master in Horticultural Science (IMaHS)	2	5
40	Master in Industrial Mechanical Engineering(Degree class: LM-33)	2	5
41	Master in Viticulture	2	5
42	PhD in Advanced-Systems Engineering(Duration of the programme: 3 years )	7	5
43	International PhD in Food Engineering and Biotechnology(Duration of the programme: 3 years)	1	5
44	PhD in Mountain Environment and Agriculture(Duration of the programme: 3 years)	8	5
45	PhD in Sustainable Energy and Technologies(Duration of the programme: 3 years)	5	5
46	2nd Cycle Master in Sustainable Management of Geo-hydrological Risk in Mountain Environments	5	5
47	2nd Cycle Master in BEE: Building	5	5
\.


--
-- Data for Name: question; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.question (id) FROM stdin;
\.


--
-- Data for Name: sendsmessageto; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.sendsmessageto (id, date, "time", text, users, conversation) FROM stdin;
\.


--
-- Data for Name: session; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.session (id, date, start_time, end_time, users) FROM stdin;
\.


--
-- Data for Name: student; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.student (id, program) FROM stdin;
\.


--
-- Data for Name: subject; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.subject (id, ects, name) FROM stdin;
1	6	Linear Algebra*
2	6	Discrete Mathematics
3	9	Computer Programming*
4	3	English for Computer Scientists 1
5	6	Computer Systems Architecture
6	6	Analysis
7	6	Web and Internet Engineering
8	6	English for Computer Scientists 2
9	9	Programming Project
10	6	Operating Systems
11	3	Maker Lab
12	6	Introduction to Databases
13	6	Probability Theory and Statistics
14	9	Data Structures and Algorithms
15	6	Italian for Computer Scientists / German for Computer Scientists
16	6	Database Management Systems
17	6	Formal Languages and Compilers
18	12	Software Engineering
19	6	Applied Computer Science 1
179	6	Module WUP DES Product Design(Project Warm-up DES)
21	12	Applied Computer Science 2
22	6	Computer Networks
23	6	Module 1: Computational Mathematics(Computational Security)
24	6	Module 2: Information Security(Computational Security)
25	3	Project and Teamwork Management
26	3	Scientific Writing and Communication
27	3	Introduction to Business Administration
180	8	Drawing 3D CAD - 1 and 2
181	6	Descriptive Geometry DES
30	6	Software Systems Architecture(Software Architecture)
31	6	Engineering of Mobile Systems(Mobile and Physical Systems)
32	6	Foundations of Artificial Intelligence(Artificial Intelligence)
33	6	Knowledge Representation(Intelligent Agents)
34	6	Introduction to Linear Algebra and Discrete Mathematics
35	9	Introduction to Programming
36	6	Accounting for Decision Making
37	9	Economics of Digital Markets
38	6	Introduction to Analysis and Optimization Techniques
39	0	Module 1: Data and Process Modeling for Business Informatics(Modeling and Databases)
40	6	Application Engineering for Business Informatics
182	6	History of Design 1
42	0	Module 1: Strategic Management and Digital Business(Introduction to Digital Business, Strategy and Management )
43	12	Specialization in Digital Finance and Financial Markets or in Digital Market and Advertising*
183	5	History of Design 2
477	5	General Pedagogy(General and Social Pedagogy)
46	6	Management of System Security and Networks
47	3	English for Informatics and Digital Business
48	0	Module 1: IT Management and Enterprise Modeling(IT Management and ERP Systems)
49	6	Engineering of Mobile Systems
50	0	Module 1: Introduction to Data Mining(Data Mining and Decision Making)
185	6	Interior and Exhibit Design
52	3	Legal Aspects of IT
53	3	Italian/German for Informatics and Digital Business
54	6	Seminar in Business Informatics and Information Systems
55	6	Specialisation in Digital Finance and Financial Markets or in Digital Market and Advertising*
56	6	Software Project Management
478	10	General Sociology
479	5	General Psychology(General and Developmental Psychology)
59	6	Advanced Data Management Technologies
60	6	Artificial Intelligence – Methods and Applications
61	6	Data Visualisation and Exploration(Programming and Visualisation for Data Analytics)
62	6	Statistics for Data Science
63	6	Human-Centered Computing
64	6	Information Retrieval
65	6	Machine Learning
66	6	Systems Security
188	6	Video and Post-Production(1 Mandatory Course to be chosen among the following)
68	6	Data Integration(Data Curation)
69	6	Capstone Project
189	6	Digital Design: 3D CAD Advanced(1 Mandatory Course to be chosen among the following)
190	8	Sociology of Social Change(1 Mandatory Course to be chosen among the following)
72	4	Advanced English for Scientific Communication
191	3	Foreign Language DES - ART 1 Italiano(1 Mandatory Course to be chosen among the following)
480	5	Social Legislation(Social and Juvenile Legislation)
75	6	Advanced Topics in Machine Learning
76	6	Agile Software Development
77	6	Computational Linguistics
78	12	Data and Information Modelling
79	6	Data Maintenance and Evolution
80	6	Data Scientist Toolbox
81	6	Decision Making and Support Systems
82	6	Development of Data Products
83	6	Enterprise Architecture
84	6	Formal Verification of Software and Systems
85	6	Intelligent Agents
86	6	Introduction to Parallel Computing
87	6	Lean Start-Up and Entrepreneurship
88	6	Management of Temporal and Spatial Data
89	6	Process-Aware Information Systems
90	6	Process Mining
91	6	Real-Time Big Data Processing
92	6	Recommender Systems
93	6	Research Methods and Technology Transfer
94	6	Semantic Technologies and Linked Data
95	6	Simulation and Modelling
96	6	Web and Text Mining
98	6	Algorithms for Data Processing
99	6	M-1 Data and Process Modelling(Data and Information Modelling)
100	6	Artificial Intelligence - Methods and Applications
101	6	Enterprise Architectures
194	8	Product Design(Project Product design 1)
195	8	Visual Communication(Project Visual Communication 1)
196	8	Visual Communication(Project Visual Communication 2)
197	8	Product Design(Project Product design 2)
481	5	Methods and Teaching of Physical Education
482	5	Social Psychology
483	5	Empirical Pedagogy
484	5	Sociology of Deviance(Behaviour and Sociology of Communicative and Cultural Processes)
485	5	Special Needs in Education(Special Needs in Education, Technology for Inclusive Education)
486	5	English
487	5	Psychology of Education
488	5	Politics
489	3	Computer Skills for Education
207	0	Bankraum (Assembly Space) Workshop
210	12	Project 1 in Eco-Social Design
211	6	Design Research related to Project 1 and 2
212	12	Project 2 in Eco-Social Design
213	9	Design 3(Thesis Project Phase 1: Research through Design, Exploration and Experimentation)
214	6	Web and Media Design
215	6	Design and Production(1 Mandatory Course to be chosen among the following:)
216	6	Political Ecology
217	6	Ecosocial Economics
129	0	Programming and Visualisation for Data Analytics
218	6	Media Studies(2 Mandatory Courses to be chosen among the following:)
219	3	English 1
492	5	Media Education
221	6	Seminars***
493	5	Intercultural Pedagogy(Intercultural Pedagogy and Adult Education)
135	6	M1 Data Visualization and Exploration(Programming and Visualization for Data Analytics)
136	6	Contemporary Software Development
137	6	Requirements and Design for Dependable Systems
138	6	Alternatives from Catalogue
139	6	Verification and Reliability for Dependable Systems
140	6	M1: Embedded Systems Design and Implementation(Systems Design and Implementation)
141	6	Software and Systems Security
142	6	Cloud Computing and Distributed Systems
494	5	Hygiene(Hygiene and Prevention, Health Promotion and Social Medicine)
495	5	Social Statistics
496	5	Cultural Anthropology
497	5	German or Italian
148	6	Module WUP ART Praxis(Project Warm-Up ART)
149	8	Artistic Drawing 2D - 1 and 2
150	6	Artistic Practices 1 and 2
151	6	Typography and Graphics
152	6	History of Contemporary Art 1
153	5	History of Contemporary Art 2
154	6	Drawing and Storytelling
155	6	Interaction and Communication Design
156	6	Artistic Productions 1 and 2
157	3	Foreign Language - Linguistic Skills
158	6	Descriptive Geometry ART
159	8	Cultural Anthropology(1 Mandatory Course to be chosen among the Following)
160	3	Foreign Language DES-ART 1 Italiano(1 Mandatory Course to be chosen among the Following)
161	2	Seminar*
163	8	Spaces and their Production(Studio A - "Space")
164	8	Interaction/Performance(Studio B - "Interact")
165	8	Photography-Video(Studio C – "Image")
166	8	Curatorial Theory and Practices(Studio D - "Exhibit")
167	9	Degree Project
168	0	Carpentry Workshop
169	0	Metal Workshop
170	0	Plastics Workshop
171	0	Digital Modelling Workshop
172	0	Print Workshop
173	0	Cutting and Binding Workshop
174	0	Photography Workshop
175	0	Video Workshop
176	0	Bankraum (Assembly space)
177	0	Surface Treatment Workshop
178	0	Glass Workshop
500	6	Final exam
501	6	Quantitative Analysis of Social Phenomena and Population Dynamics
231	0	Assembly Space (Bankraum)
234	8	Microeconomics
235	8	Introduction to Accounting
236	6	M-1 Mathematics for Economists(Mathematics for Economists)
237	8	Macroeconomics
238	5	Computer Science
239	8	Introduction to Management
240	4	Foreign Language 1 - Specialised Language course for Economics - Basic*
241	4	Foreign Language 2 - Specialised Language course for Economics - Basic*
242	6	M-1 Public Economic Law(Introduction to Legal Systems)
243	6	M-1 Marketing(Marketing and Strategic Management)
244	6	Financial Analysis
245	6	Statistics
246	6	Mathematics of Finance
247	3	Foreign Language 1 - Specialised Language course for Economics - Advanced*
248	3	Foreign Language 2 - Specialised Language course for Economics - Advanced*
251	6	Economic Policy
252	6	Industrial Economics
253	6	Business Law
254	6	Intermediate Financial Accounting(Typical Subject (one of the following):)
255	6	Entrepreneurship and Innovation Management(Typical Subject (one of the following):)
256	6	Financial Risk Management(Typical Subject (one of the following):)
257	6	Econometrics for Economics(Complementary Subject (one of the following):)
258	6	Contract Law(Complementary Subjects (two of the following):)
259	3	Final Exam
260	8	Economics 1 for PPE
261	6	History of Economic Thought for PPE
262	6	M-1 Mathematics A for PPE(Mathematics for PPE)
263	8	Business Administration
264	8	Economics 2 for PPE
265	8	Comparative Politics
266	8	Principles of Philosophy 1
267	3	Foreign Language 1 - Specialized Language Course*
268	3	Foreign Language 2 - Specialized Language Course*
269	3	Information Systems and Data Management
270	6	M-1 Public Law(European and Public Law)
271	8	Statistics for PPE
272	8	Principles of Philosophy 2
273	8	Political Theory
274	6	Applied Econometrics
275	7	Decision Making and Ethics
276	3	Foreign Language 1 - Advanced Specialized Language Course*
277	3	Foreign Language 2 - Advanced Specialized Language Course*
502	6	Introduction to Scientific Work and Qualitative Social Research
280	6	Economics Law
281	7	Economic Policy and Institutions
282	7	Political Economics (curr. Social Sciences)
283	3	Introduction to Academic Writing
284	7	International Economics(Typical Subject (one of the following):)
285	7	Public Economics(Typical Subject (one of the following):)
504	6	Social Work Theories, Principles and Ethics(Introduction to Social Work and Social Policy)
505	6	Public Law and Fundamental Rights Protection
506	6	General Psychology
507	5	Fields and Organization of Social Work Practice(Social Work Methodology and Organization)
509	4	Orientation Placement
510	6	Social Work Methods 2
511	5	Inter- and transnational Social Work(Social Work in historical, inter- and transnational contexts)
294	3	Foreign Language 1  - Specialized Language course*
295	3	Foreign Language 2  - Specialized Language course*
512	6	Body, Gender and Family in Transcultural Perspective
513	9	Developmental and Educational Psychology
514	6	Mental Health and Illness in the Life Cycle
515	6	Social Pedagogy throughout the Life Cycle
300	8	Econometrics for PPE
301	7	Financial Markets and Institutions for PPE
516	6	Juvenile and Family Law
517	11	Field Placement and Critical Reflection (lab.)
518	6	Actors, Sectors and Spaces of Welfare(Local Welfare Development)
519	5	Social Work Methods 3
307	7	Economic Policy for PPE
308	7	Labor Economics
309	6	Banking and Financial Law
521	6	Penal and Penitentiary Law
522	6	Social Change, Diversity and Inclusion
312	7	Theory of Science(Complementary Subject (one of the following):)
523	2	English for Professional and Academic Purposes
524	2	Information and Communication Technology for Social Work (lab.)
315	6	M-1 Mathematics for Economists TSE(Mathematics for Economists TSE)
316	6	Tourism and Sport Law
317	8	Introduction to Accounting for TSE
318	8	Micro and Macroeconomics
319	8	Marketing
320	6	Introduction to Tourism, Sport and Event Management
321	3	Foreign Language 1 – Communication and Presentation Skills in Specialized Language*
322	3	Foreign Language 2 – Communication and Presentation Skills in Specialized Language*
323	6	Managerial Economics for TSE
324	6	Statistics for TSE
325	6	Managerial Accounting
326	9	Introduction to Finance
327	6	Foreign Language (Spanish, Russian or French)
328	6	M-1 Strategic Management(Entrepreneurship and Leadership)
329	6	Economics of Sport and Events(Typical Subject (one of the following):)
330	6	Experiential Tourism: current trends in food and wine(Typical Subject (one of the following):)
331	6	Event Management and Planning(Complementary Subject (one of the following):)
332	6	M-1 Foundations of Business Law(Business Law)
333	3	Technology, Media and Data in Tourism, Sports and Events
334	6	Sport Marketing and Sponsorship(Typical Subject (one of the following):)
335	6	Current Issues in Sport Management(Complementary Subject (one of the following):)
336	6	Quantitative Methods in Management(Complementary Subject (one of the following):)
526	7	Project Placement
528	6	Advanced Issues in Linguistics(Linguistics)
529	6	Romance Linguistics
530	6	Computer programming (Python)(Computer Science)
532	3	Minority Language
533	6	Sociolinguistics and Multilingualism(Sociolinguistics)
534	6	Language Variation and Change
535	6	German Dialectology
536	6	Cultural Anthropology(Anthropology)
537	6	Quantitative Methods in Linguistics(Quantitative Linguistics)
539	6	Language Acquisition(Language acquisition and language policy)
540	6	Linguistic rights
545	6	Computer Linguistics(Computer Linguistics)
549	6	Social Work and Social Theory(Theory and Research in Social Work)
550	6	Community Work and Participation
551	6	Social Policy Between Global Change and Local Challenges(Social Policy and Welfare Production)
552	6	Quantitative Methods and Social Research
553	6	Labour and Social Security Law(Labour Dymanics, Social Security and Administrative Action)
554	6	Psychology of Care and Personnel Development in Social Work
555	4	Digital Ecology
556	4	Professional Placement
365	6	M-1 Macroeconomics(Economics for Accounting and Finance)
366	6	Applied Statistics for Accounting  and Finance
367	6	Advanced Accounting
368	6	Advanced Financial Statement Analysis
369	3	Data Analytics, Big Data and Blockchain
370	6	Financial Mathematics
371	9	Advanced  Corporate Finance (FIN II)
372	6	Advanced Business Law
373	6	Advanced Auditing
374	6	Advanced Taxation Law
375	6	Corporate Bankruptcy and Reorganisation
376	3	Lab in CPA exam
377	3	Advanced Specialized Language Course for Accounting and Finance 1*
378	3	Advanced Specialized Language Course for Accounting and Finance 2*
379	6	Academic Writing and Research Skills*
380	6	International Contract Law(Complementary Subject (one of the following):)
558	6	Inter-and Transcultural Approaches in Communicative and Organizational Processes(Values and Ethics in Cultural and Professional Contexts)
559	6	Administration and Economic Management of Social Services(Social Entrepreneurship and Economic Management of Social Services)
560	6	Criminal Justice and Social Work
385	6	Applied Statistics for Accounting and Finance
561	4	Integrated Social Planning
562	4	English for Social Work
563	6	Project or Research Placement
564	12	Final Exam”
390	9	Advanced Corporate Finance (FIN II)
565	12	Perspectives on music making and learning
392	6	Corporate Restructuring, M&A (FIN II)
393	6	Risk Management and Derivatives
394	6	Financial Econometrics
395	3	Lab in Financial Trading
566	6	Ethnomusicology
567	6	Music Paleography and Philology
399	6	Banking and Financial Law(Complementary Subjects (one of the following):)
569	6	German Literature
572	6	Theoretical and methodological basics of communicating music (Musikvermittlung)
573	6	Forms and techniques of communicating music (Musikvermittlung): thematic insights
574	6	History of theatre and musical dramaturgy
576	6	Study of musical sources
577	6	Aesthetic Education
578	33	Scientific language skills
411	6	Measuring and Driving Corporate Performance
412	6	Modeling Financial statement
413	6	Advanced Strategic Management
414	3	Lab in Advanced Communication in Business
580	6	Music Philology
581	6	Stylistics of the modern and contemporary music
417	6	Advanced Writing and Research Skills*
418	6	Corporate Bankruptcy and Reorganization(Complementary Subject (one of the following):)
582	6	Musical Dramaturgy
583	6	History of art criticism
584	6	Codicology
422	6	M-1 Design Thinking and Prototyping**(Growth Mindset)
423	6	M-1 Business Economics(Economics for Management)
424	9	Foundations of Entrepreneurship**
425	6	Statistical Methods for Business Analysis
426	6	Service Design(1 of the following:)
427	9	Entrepreneurial Finance and Venture Capital(1 of the following:)
585	6	Archival studies I or Paleography II
429	6	Entrepreneurial Marketing
430	8	Startups Law and Industrial Law
432	6	Social Entrepreneurship(2 of the following:)
433	7	Entrepreneurship Lab - for start-ups**(1 of the following:)
436	6	Economics of the Public Sector
438	6	Management and Organization in the Public Sector
439	6	Human Resource Management in the Public Sector
440	6	Accounting for the Public Sector
441	6	M-1 Introduction to Statistical Methods(Statistics for the Public Sector)
442	6	M-1 Theory and Laboratory of Public Law and Sources of Law(Public and Administrative Law)
443	33	Italian/German/English: Advanced Specialized Language Course*
444	3	Management Information Systems in the Public Sector
446	6	Topics in Public Economics(Complementary Subjects - students have to choose one of the following subjects:)
449	8	Comparative Public Policy
681	6	Operations Research
682	6	Economics for Engineers
450	6	Management and Organization of Public Services(Complementary Subjects - students have to choose two of the following subjects:)
451	8	Institutional Communication and Public Project Management
452	6	Advanced Accounting for Public Sector(Complementary Subjects - students choose two of the following subjects:)
453	6	Elements of Linguistic Theory I
454	6	Principles of Sociology
455	6	Techniques of Visual Communication(Techniques of Visual Communication and Music as Communication)
456	6	Statistics and Methodology in Culture, Economics and Society
457	6	Anthropology of Intercultural Processes
458	6	Psychology of Communication
459	6	Marketing and Communication: Theory and Instruments
460	6	Elements of Computer Science for Communications
588	9	Mathematics and Applied Statistics
462	6	Elements of Linguistic Theory II
463	6	Media and Society(Media and Society and Cultural Studies)
464	6	Sociology of Culture
465	6	Design in Virtual Environments for Communication(Design in Virtual Environments for Communication and Media Education)
466	6	Management of Non-Profit and Cultural Organizations
467	6	Culture and Aesthetics
468	6	Language and Translation – German Language
589	8	Fundamentals of Chemistry
470	6	Communication in Social and Political Campaigns(Communication in Social and Political Campaigns and Social media)
471	6	Sustainable Development
472	6	Theory and Techniques of Measuring Cultural and Socio-Economic Phenomena
473	6	Media Law
474	6	Institutional Communication
590	6	Botany(Plant and Animal Biology )
591	6	Fundamentals of Physics
592	3	Applied Informatics
593	6	Plant Genetics
594	6	Agribusiness Administration and Finance
595	6	Agricultural Ecology and Principles of Plant Production
596	6	Principles of Tree Cultivation
597	6	Agricultural Machinery
598	6	Soil Chemistry and Fertility
599	6	Agricultural Economics and Policy(Agricultural Economics, Policy and Law )
600	6	Entomology(Entomology and Phytopathology )
601	6	Biochemistry and Physiology of Agricultural Plants
602	9	Biology of Micro-organisms and Agricultural Microbiology(Microbiology and Agro-industries )
605	6	Rural Appraisal
606	9	Hydrology and Hydraulics
607	6	Plant Protection
608	6	Animal Breeding and Animal Husbandry(Animal Breeding and Grassland Management )
609	6	Fruit Production
611	9	Hydrology and Hydraulics(Rural Appraisal  )
612	6	Forestry(Forestry and Forest Ecology )
613	6	Environmental Geomatics and Remote Sensing
616	9	Food Microbiology
617	6	Protection of the Stored Products
618	6	Unit Operations in Food Engineering(Food Technologies )
619	6	Analytical Chemistry
621	10	Mathematical Analysis I
622	6	General and Inorganic Chemistry
623	8	Geometry
624	6	Fundamentals of Information Science and Microcontroller Programming
625	8	Physics I
626	10	Mathematical Analysis II
627	6	Technical Drawing and Industrial Engineering Methods
628	6	Materials Science and Technology(Materials Science and Structural Mechanics)
629	6	Physics II
630	10	Production Systems and Industrial Logistics
631	6	Electrical circuits and Machines
632	10	Engineering Thermodynamics and Heat Transfer
633	6	Classical Mechanics
634	6	Fluid Mechanics
637	10	Mechanics of Machinery
638	8	Fluid Machines
639	6	Fundamentals of Machine Design
640	6	Machine Design
641	8	Manufacturing Technology
642	8	Factory and Plant planning
643	3	Specialized Language
662	6	Industrial Electrical Applications
664	6	Advanced Methods for Fluid Machine Design
665	8	Engineering Energetics
685	8	Digital Production Planning and Quality Control
686	6	Logistics and Transport
700	10	Mechanics of Machines and Mechanism for Automation
703	6	Engineering Thermodynamics and Heat Transfer for Mechatronics
704	6	Fundamentals of Hydraulics and Pneumatics
708	6	Systems and Control(Systems and Control)
712	6	Programmable Controllers for Industrial Automation
714	6	Optimization
715	6	Reverse Engineering und Rapid Prototyping
717	6	Mathematics
719	6	Economy, Law, Contracts
720	6	Wood Chemistry
721	6	Physics
722	6	Wood Anatomy and Productive Forestry
723	10	Product Design
724	6	Fundamentals of Programming
725	6	Technical Drawing - CAD
726	3	Specialised Language
727	6	Logging, sawmill operations and traceability procedures of wood(Complementary Subject (one of the following):)
728	6	Heat and Mass Transfer
729	6	Material Sciences
730	6	Industrial Production Organization and Management
731	6	Electronics, Diagnosis and Quality Control
733	6	Energy Efficiency in Wood Production and Final Use
734	6	Mechatronics and Process Automation
735	6	Industrial Plants and Logistics
738	6	Fundamentals of Information Science and Microcontroller programming
749	6	Construction Site 4.0
750	6	Mechanics of Structures
752	6	High-Performance Buildings: Comfort, Energy Efficiency
753	6	High-Performance Buildings: Seismic Design and Fire Resistance
755	6	Operational Safety and LCA
757	6	Electrical Systems Engineering
758	9	Fluid Machines Engineering
759	6	Engineering Thermodynamics, Heat and Mass Transfer
760	4	Environmental Fluid Mechanics(Environmental Fluid Mechanics/ Hydropower Plants)
761	9	Building HVAC Systems
762	9	Advanced Applications of Building Physics
763	6	Electric Power Conversion Equipment
764	3	Italiano Tecnico / Technisches Italienisch(One exam from the following two subjects:)
765	6	Thermal Engines(Power Production, CHP and District Heating Systems)
766	6	Special Issues of Building Physics
767	6	Technologies and Production Processes for Energy Engineering(Applied Mechanics and Technologies for Energy Efficiency)
768	6	Wind Powers Systems(Hydropower and Wind Power System)
769	3	Fundamentals of Structural Mechanics(Mechanics and Structural Design for Energy Engineering)
770	6	Advanced Materials for Energy Engineering
771	6	District Heating System Design
772	6	Electrochemical Energy Storage and Conversion(One exam from the following two subjects:)
775	6	Landscape Ecology
776	0	Geomatics and Landscape Planning(Advanced English (C1-Level))
777	6	Management of Mountain Forests
778	3	Environmental Economics(Basics of Environmental Economics and Natural Risk Management)
779	3	Applied Statistics
780	0	Sustainable Development of Mountain Areas
781	3	Project Development and Management(Economic Development, Sustainable Tourism and Regional Products )
782	3	Ecosystem Restoration(Ecosystem Restoration and Rural Appraisal)
783	6	Technologies for Low Input Agricultural Systems
784	4	Mountain Agriculture(Sustainable Farming Systems in Mountain Areas)
786	5	Selected topics in environmental management (one mandatory course at Faculty of Biology, University of Innsbruck)
789	3	Advanced English (C1-Level)
790	3	Geomatics(Geomatics and Landscape Planning)
792	3	Environmental Economics(Basics of Environmental Economics and Natural Risk Management )
794	3	Applied Botany(Nature Conservation and Management )
795	3	Protection Forestry(Forest Planning and Protection Forestry )
796	3	Hydromorphology of Mountain Rivers(Management of Mountain Rivers )
797	3	Advanced Geomatics(Advanced Geomatics and Environmental Impact Assessment)
799	5	Selected Topics in Environmental Management (one mandatory course at Faculty of Biology, University of Innsbruck)
801	6	Unit Operations in Food Processing(Innovation and Authenticity in Food Processing)
802	8	Fermentations as Tools for Making Traditional and Innovative Foods and Beverages
803	6	Food Chemistry
804	6	Food Value Chain Management
805	3	Computer Application in Food Sciences
806	6	Reaction Kinetics in Food Processing
807	8	Environmental Chemistry Towards Food Processing
808	6	The Natural Microbial Starters for Innovation and Authenticity(Starter and Functional Microbes for Innovation, Authenticity and Healthy Status )
809	6	Food Processing Equipment
810	6	Genetics Applied to Foods
811	6	Sensors and Biosensors for Food Processing
814	6	Food Structure Control and Management
815	6	Quality System Development and Management and Shelf Life Assessment of Food
816	6	Sample Preparation Techniques and Analysis of Contaminants
819	6	Human Nutrition
820	6	Applied Human Nutrition
821	6	Industrial Microbiology for Food Quality Improvement
824	5	Chemistry of Food Proteins
825	5	Cheese and Fermented Dairy Foods
826	5	Meat Science and Technology
829	5	Introduction to Packaging Technology
830	5	Packaging Technology  – Mechanical Processes
831	5	Beverage Process Engineering
834	5	Reverse Engineering and Rapid Prototyping(Design and Manufacturing of Industrial Products)
835	5	Project Management(Project, Process and Technology Management )
836	5	Automatic Control
837	5	Functional Mechanical Design
838	5	Mechatronics and Robotics(Industrial Automation and Digital Manufacturing)
839	5	Thermo-Mechanicals Measurements
840	5	Digital Factory and Industrial Maintenance
841	5	Mobile Robotics
842	5	Electric Drives and Machines
844	5	AI Applications in Industry
848	5	Study project
853	5	Management Control and Business Planning
857	5	Digital Transformation and Sustainability Management
858	5	Logistic strategies and methods (offered at OvGU Magdeburg)
859	5	Supply Chain Practice / ERP (offered at OvGU Magdeburg)
860	5	Business Decision Making (offered at OvGU Magdeburg)
862	5	Study Project (Individual or Team) - Laboratory in Mechanics/Automation
\.


--
-- Data for Name: tag; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.tag (id, name) FROM stdin;
\.


--
-- Data for Name: taught_in; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.taught_in (subject, program) FROM stdin;
1	1
2	1
3	1
4	1
5	1
6	1
7	1
8	1
9	1
10	1
11	1
12	1
13	1
14	1
15	1
16	1
17	1
18	1
19	1
21	1
22	1
23	1
24	1
25	1
26	1
27	1
30	1
31	1
32	1
33	1
34	2
35	2
36	2
37	2
38	2
39	2
40	2
42	2
43	2
46	2
47	2
48	2
49	2
50	2
52	2
53	2
54	2
55	2
56	2
59	3
60	3
61	3
62	3
63	3
64	3
65	3
66	3
68	3
69	3
72	3
75	3
76	3
77	3
78	3
79	3
80	3
81	3
82	3
83	3
84	3
85	3
86	3
87	3
88	3
89	3
90	3
91	3
92	3
93	3
94	3
95	3
96	3
98	3
99	3
100	3
101	3
129	3
135	4
136	4
137	4
138	4
139	4
140	4
141	4
142	4
148	6
149	6
150	6
151	6
152	6
153	6
154	6
155	6
156	6
157	6
158	6
159	6
160	6
161	6
163	6
164	6
165	6
166	6
167	6
168	6
169	6
170	6
171	6
172	6
173	6
174	6
175	6
176	6
177	6
178	6
179	7
180	7
181	7
182	7
183	7
185	7
188	7
189	7
190	7
191	7
194	7
195	7
196	7
197	7
207	7
210	8
211	8
212	8
213	8
214	8
215	8
216	8
217	8
218	8
219	8
221	8
231	8
234	10
235	10
236	10
237	10
238	10
239	10
240	10
241	10
242	10
243	10
244	10
245	10
246	10
247	10
248	10
251	10
252	10
253	10
254	10
255	10
256	10
257	10
258	10
259	10
260	11
261	11
262	11
263	11
264	11
265	11
266	11
267	11
268	11
269	11
270	11
271	11
272	11
273	11
274	11
275	11
276	11
277	11
280	11
281	11
282	11
283	11
284	11
285	11
294	11
295	11
300	11
301	11
307	11
308	11
309	11
312	11
315	12
316	12
317	12
318	12
319	12
320	12
321	12
322	12
323	12
324	12
325	12
326	12
327	12
328	12
329	12
330	12
331	12
332	12
333	12
334	12
335	12
336	12
365	14
366	14
367	14
368	14
369	14
370	14
371	14
372	14
373	14
374	14
375	14
376	14
377	14
378	14
379	14
380	14
385	14
390	14
392	14
393	14
394	14
395	14
399	14
411	14
412	14
413	14
414	14
417	14
418	14
422	15
423	15
424	15
425	15
426	15
427	15
429	15
430	15
432	15
433	15
436	16
438	16
439	16
440	16
441	16
442	16
443	16
444	16
446	16
449	16
450	16
451	16
452	16
453	21
454	21
455	21
456	21
457	21
458	21
459	21
460	21
462	21
463	21
464	21
465	21
466	21
467	21
468	21
470	21
471	21
472	21
473	21
474	21
477	22
478	22
479	22
480	22
481	22
482	22
483	22
484	22
485	22
486	22
487	22
488	22
489	22
492	22
493	22
494	22
495	22
496	22
497	22
500	22
501	23
502	23
504	23
505	23
506	23
507	23
509	23
510	23
511	23
512	23
513	23
514	23
515	23
516	23
517	23
518	23
519	23
521	23
522	23
523	23
524	23
526	23
528	25
529	25
530	25
532	25
533	25
534	25
535	25
536	25
537	25
539	25
540	25
545	25
549	26
550	26
551	26
552	26
553	26
554	26
555	26
556	26
558	26
559	26
560	26
561	26
562	26
563	26
564	26
565	27
566	27
567	27
569	27
572	27
573	27
574	27
576	27
577	27
578	27
580	27
581	27
582	27
583	27
584	27
585	27
588	33
589	33
590	33
591	33
592	33
593	33
594	33
595	33
596	33
597	33
598	33
599	33
600	33
601	33
602	33
605	33
606	33
607	33
608	33
609	33
611	33
612	33
613	33
616	33
617	33
618	33
619	33
621	34
622	34
623	34
624	34
625	34
626	34
627	34
628	34
629	34
630	34
631	34
632	34
633	34
634	34
637	34
638	34
639	34
640	34
641	34
642	34
643	34
662	34
664	34
665	34
681	34
682	34
685	34
686	34
700	34
703	34
704	34
708	34
712	34
714	34
715	34
717	35
719	35
720	35
721	35
722	35
723	35
724	35
725	35
726	35
727	35
728	35
729	35
730	35
731	35
733	35
734	35
735	35
738	35
749	35
750	35
752	35
753	35
755	35
757	36
758	36
759	36
760	36
761	36
762	36
763	36
764	36
765	36
766	36
767	36
768	36
769	36
770	36
771	36
772	36
775	37
776	37
777	37
778	37
779	37
780	37
781	37
782	37
783	37
784	37
786	37
789	37
790	37
792	37
794	37
795	37
796	37
797	37
799	37
801	38
802	38
803	38
804	38
805	38
806	38
807	38
808	38
809	38
810	38
811	38
814	38
815	38
816	38
819	38
820	38
821	38
824	38
825	38
826	38
829	38
830	38
831	38
834	40
835	40
836	40
837	40
838	40
839	40
840	40
841	40
842	40
844	40
848	40
853	40
857	40
858	40
859	40
860	40
862	40
\.


--
-- Data for Name: teaches; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.teaches (professor, subject) FROM stdin;
1	18
2	12
3	460
3	63
5	16
6	22
8	35
8	92
9	64
11	17
11	10
12	34
13	9
15	69
15	9
15	7
17	76
18	100
19	66
22	75
22	2
24	59
28	13
30	40
31	65
32	2
33	12
33	94
34	6
34	62
38	63
40	9
41	6
42	22
42	35
42	10
43	81
44	5
44	86
45	91
47	219
48	592
48	7
50	4
50	8
50	578
52	37
53	440
55	440
58	82
58	444
58	10
60	72
60	4
60	8
60	47
61	440
63	594
68	14
95	577
104	182
104	183
105	210
105	212
120	158
120	181
135	723
141	150
146	210
152	180
159	149
164	149
165	149
178	319
180	37
180	252
180	323
181	368
182	367
182	235
185	372
186	439
187	38
189	263
190	436
190	234
191	301
191	395
193	413
193	239
193	414
194	274
194	300
194	394
196	308
197	251
197	281
198	370
198	393
200	266
200	272
201	271
202	273
204	245
208	264
208	318
210	719
212	244
215	319
217	326
219	238
219	269
220	325
221	385
222	239
223	324
225	275
225	272
227	429
228	260
228	252
229	316
231	264
231	252
232	239
237	372
242	374
243	261
251	265
254	449
256	374
265	260
265	237
265	318
265	234
266	238
267	245
272	373
274	235
274	317
274	376
284	488
285	438
286	478
289	319
292	274
293	373
299	266
299	272
301	82
302	323
304	316
305	244
305	326
306	324
309	367
310	269
312	368
317	440
326	300
336	529
337	535
339	481
340	501
340	495
340	456
340	472
341	565
341	572
343	453
345	550
348	569
355	565
363	534
364	502
368	474
369	573
370	516
372	513
373	462
376	486
385	501
385	456
385	472
390	576
393	454
396	478
398	457
398	512
399	474
403	513
409	532
410	471
411	515
416	473
427	569
429	532
445	483
452	65
459	505
460	514
467	583
475	487
477	567
477	580
481	467
491	554
491	482
510	516
522	578
527	584
571	471
579	582
612	453
626	626
627	601
630	762
633	630
634	597
635	601
635	598
639	595
639	596
640	777
641	637
642	836
642	624
642	841
643	775
648	634
648	625
649	625
649	629
650	853
651	731
656	589
658	623
658	621
662	627
664	758
666	591
667	641
675	841
680	681
684	766
687	630
689	730
696	595
697	762
703	621
703	626
705	601
707	766
740	761
747	853
748	819
751	758
767	757
768	686
780	596
784	641
789	750
792	842
792	763
794	759
800	761
808	770
812	729
845	777
848	630
859	630
871	589
884	598
887	593
\.


--
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.users (id, name, surname, prefix, number, mail, password) FROM stdin;
1	Claus	Pahl	+39	0471 016177	Claus.Pahl@unibz.it	0000
2	Diego	Calvanese	+39	0471 016160	Diego.Calvanese@unibz.it	0000
3	Antonella	DeAngeli	+39	0471 016041	Antonella.DeAngeli@unibz.it	0000
5	Johann	Gamper	+39	0471 016140	Johann.Gamper@unibz.it	0000
6	Antonio	Liotta	+39	\N	Antonio.Liotta@unibz.it	0000
8	Francesco	Ricci	+39	0471 016971	Francesco.Ricci@unibz.it	0000
9	Barbara	Russo	+39	0471 016170	Barbara.Russo@unibz.it	0000
11	Alessandro	Artale	+39	0471 016150	Alessandro.Artale@unibz.it	0000
12	Bruno	Carpentieri	+39	0471 016027	Bruno.Carpentieri@unibz.it	0000
13	Giancarlo	Guizzardi	+39	0471 016187	Giancarlo.Guizzardi@unibz.it	0000
15	Marco	Montali	+39	0471 016116	marco.montali@unibz.it	0000
17	Xiaofeng	Wang	+39	0471 016181	Xiaofeng.Wang@unibz.it	0000
18	Sergio	Tessaris	+39	0471 016125	Sergio.Tessaris@unibz.it	0000
19	Attaullah	Buriro	\N	\N	Attaullah.Buriro@unibz.it	0000
20	Matteo	Camilli	+39	0471 016179	Matteo.Camilli@unibz.it	0000
21	Matteo	Ceccarello	+39	0471 016141	Matteo.Ceccarello@unibz.it	0000
22	Roberto	Confalonieri	+39	0471 016244	Roberto.Confalonieri@unibz.it	0000
23	Daniela	D'Auria	\N	\N	Daniela.DAuria@unibz.it	0000
24	Anton	Dignös	+39	0471 016142	Anton.Dignoes@unibz.it	0000
25	Nabil	ElIoini	+39	0471 016138	nelioini@unibz.it	0000
26	Paolo	Felli	+39	0471 016152	Paolo.Felli@unibz.it	0000
27	Ilenia	Fronza	+39	0471 016247	Ilenia.Fronza@unibz.it	0000
28	Pietro	Galliani	\N	\N	Pietro.Galliani@unibz.it	0000
29	Rosella	Gennari	+39	0471 016964	Rosella.Gennari@unibz.it	0000
30	Andrea	AlexanderJanes	+39	0471 016132	Andrea.Janes@unibz.it	0000
31	Mouna	KacimiElHassani	+39	0471 016114	Mouna.Kacimi@unibz.it	0000
32	Oliver	Kutz	+39	0471 016124	Oliver.Kutz@unibz.it	0000
33	Davide	Lanti	+39	0471 016135	Davide.Lanti@unibz.it	0000
34	Paola	Lecca	+39	0471 016162	Paola.Lecca@unibz.it	0000
35	Elisa	Marengo	+39	0471 016171	Elisa.Marengo@unibz.it	0000
36	Eduardo	MartinsGuerra	\N	\N	Eduardo.MartinsGuerra@unibz.it	0000
37	Alessandra	Melonio	+39	0471 016222	Alessandra.Melonio@unibz.it	0000
38	Maria	MenendezBlanco	\N	\N	Maria.MenendezBlanco@unibz.it	0000
39	Alessandro	Mosca	+39	0471 016268	Alessandro.Mosca@unibz.it	0000
40	Tiago	PrinceSales	\N	\N	Tiago.PrinceSales@unibz.it	0000
41	Ognjen	Savkovic	+39	0471 016167	Ognjen.Savkovic@unibz.it	0000
42	Michele	Segata	\N	\N	Michele.Segata@unibz.it	0000
43	Nicolas	Troquard	\N	\N	Nicolas.Troquard@unibz.it	0000
44	Flavio	Vella	+39	0471 016153	Flavio.Vella@unibz.it	0000
45	Guohui	Xiao	+39	0471 016267	Guohui.Xiao@unibz.it	0000
46	Floriano	LucaZini	+39	0471 016236	floriano.zini@unibz.it	0000
47	Valentina	Adami	\N	\N	Valentina.Adami@unibz.it	0000
48	Riccardo	Billero	\N	\N	Riccardo.Billero@unibz.it	0000
49	David	Bramini	\N	\N	David.Bramini@unibz.it	0000
50	Peter	JamesBrannick	\N	\N	Peter.Brannick@unibz.it	0000
51	Lorenzo	Carpanè	\N	\N	Lorenzo.Carpane@unibz.it	0000
52	Alberto	Cavaliere	+39	0471 013278	Alberto.Cavaliere@unibz.it	0000
53	Silvia	Fissi	\N	\N	Silvia.Fissi@unibz.it	0000
54	Daniel	Gallo	\N	\N	Daniel.Gallo@unibz.it	0000
55	Elena	Gori	\N	\N	Elena.Gori@unibz.it	0000
56	Eleonora	Mencarini	\N	\N	Eleonora.Mencarini@unibz.it	0000
57	Ludovico	Minati	\N	\N	Ludovico.Minati@unibz.it	0000
58	Andrea	Molinari	+39	0471 013278	Andrea.Molinari@unibz.it	0000
59	Ingo	Pribik	\N	\N	Ingo.Pribik@unibz.it	0000
60	Jemma	F.Prior	+39	0471 013131	Jemma.Prior@unibz.it	0000
61	Alberto	Romolini	\N	\N	Alberto.Romolini@unibz.it	0000
62	Andrea	Rosani	\N	\N	Andrea.Rosani@unibz.it	0000
63	Jonas	Rossmanith	+39	0471 013278	JRossmanith@unibz.it	0000
64	Riccardo	Baratella	\N	\N	Riccardo.Baratella@unibz.it	0000
65	Hamid	RezaBarzegar	+39	0471 016192	HamidReza.Barzegar@unibz.it	0000
66	Giacomo	Bergami	\N	\N	Giacomo.Bergami@unibz.it	0000
67	Francesco	Corcoglioniti	\N	\N	Francesco.Corcoglioniti@unibz.it	0000
68	Julien	Corman	\N	\N	JulienLouisMichel.Corman@unibz.it	0000
69	Linfang	Ding	\N	\N	Linfang.Ding@unibz.it	0000
70	Ivan	Donadello	\N	\N	Ivan.Donadello@unibz.it	0000
71	Mattia	Falduti	\N	\N	Mattia.Falduti@unibz.it	0000
72	Saeed	Fathollahzadeh	\N	\N	Saeed.Fathollahzadeh@unibz.it	0000
73	Mattia	Fumagalli	\N	\N	Mattia.Fumagalli@unibz.it	0000
74	Zhenzhen	Gu	\N	\N	Zhenzhen.Gu@unibz.it	0000
75	Hind	HamrouniEpBenkhaled	\N	\N	Hind.HamrouniEpBenkhaled@unibz.it	0000
76	Gul	RukhKhan	\N	\N	GulRukh.Khan@unibz.it	0000
77	Dron	Khanna	+39	0471 016184	dron.khanna@unibz.it	0000
78	Tong	Liu	\N	\N	Tong.Liu@unibz.it	0000
79	Giulia	Lombardi	\N	\N	Giulia.Lombardi@unibz.it	0000
80	Salim	Malek	\N	\N	Salim.Malek@unibz.it	0000
82	Sadaf	Moaveninejad	\N	\N	Sadaf.Moaveninejad@unibz.it	0000
83	Nonyelum	OgechukwuStephanieNdefo	+39	0471 016178	NonyelumOgechukwuStephanie.Ndefo@unibz.it	0000
84	Fabian	Neuhaus	\N	\N	FabianMartin.Neuhaus@unibz.it	0000
85	Ladislav	Novotný	\N	\N	Ladislav.Novotny@unibz.it	0000
86	Nicola	Pedot	\N	\N	Nicola.Pedot@unibz.it	0000
87	Cristine	Pereira	+39	0471 016188	Cristine.Griffo@unibz.it	0000
89	Francesco	Sportelli	+39	0471 016119	Francesco.Sportelli@unibz.it	0000
90	Boyuan	Sun	\N	\N	Boyuan.Sun@unibz.it	0000
92	Sarah	MariaWinkler	\N	\N	SarahMaria.Winkler@unibz.it	0000
93	Jing	Xiong	\N	\N	Jing.Xiong@unibz.it	0000
94	Nitzan	Cohen	+39	0471 015220	Nitzan.Cohen@unibz.it	0000
95	Gerhard	Glüher	+39	0471 015140	Gerhard.Glueher@unibz.it	0000
96	Eva	Leitolf	+39	0471 015327	Eva.Leitolf@unibz.it	0000
98	Stephan	AugustSchmidt-Wulffen	+39	0471 015274	Stephan.SchmidtWulffen@unibz.it	0000
101	Giorgio	Camuffo	+39	0471 015193	giorgio.camuffo@unibz.it	0000
103	Roberto	Gigliotti	+39	\N	roberto.gigliotti@unibz.it	0000
104	Hans	LeoHöger	+39	0471 015194	Hans.Hoeger@unibz.it	0000
105	Kris	Krois	+39	0471 015224	Kris.Krois@unibz.it	0000
106	Christian	Upmeier	+39	0471 015213	CUpmeier@unibz.it	0000
107	Aart	vanBezooijen	+39	0471 015290	Aart.vanBezooijen@unibz.it	0000
108	Valeria	Burgio	+39	0471 015305	Valeria.Burgio@unibz.it	0000
109	German	A.Duarte	+39	0471 015108	GDuarte@unibz.it	0000
110	Andrea	Facchetti	+39	0471 015112	Andrea.Facchetti@unibz.it	0000
111	Davide	TommasoFerrando	+39	\N	DavideTommasoMariaPerfelice.Ferrando@unibz.it	0000
112	Michele	Galluzzo	\N	\N	Michele.Galluzzo@unibz.it	0000
113	Alvise	Mattozzi	+39	0471 015227	AMattozzi@unibz.it	0000
114	Jennifer	LiesbethSchubert	+39	0471 015342	JenniferLiesbeth.Schubert@unibz.it	0000
115	Secil	UgurYavuz	+39	0471 015311	Secil.UgurYavuz@unibz.it	0000
116	Gerda	Videsott	\N	\N	Gerda.Videsott@unibz.it	0000
118	Mary	ElisabethAdams	+39	0471 012400	MaryElisabeth.Adams@unibz.it	0000
119	Simone	Aliprandi	\N	\N	Simone.Aliprandi@unibz.it	0000
120	Rigoberto	ArambulaLara	+39	0471 017619	Rigoberto.Arambula@unibz.it	0000
121	Massimo	Bartolini	+39	0471 015335	Massimo.Bartolini@unibz.it	0000
122	Riccardo	Berrone	\N	\N	Riccardo.Berrone@unibz.it	0000
123	Mauro	VincenzoBubbico	\N	\N	MauroVincenzo.Bubbico@unibz.it	0000
124	Gianluca	Camillini	+39	0471 015249	Gianluca.Camillini@unibz.it	0000
125	Giulia	Cordin	+39	0471 015333	Giulia.Cordin@unibz.it	0000
126	Pietro	Corraini	+39	0471 015318	Pietro.Corraini@unibz.it	0000
129	Martin	Fengel	+39	0471 015285	Martin.Fengel@unibz.it	0000
130	Giacomo	Festi	\N	\N	Giacomo.Festi@unibz.it	0000
131	Amy	MicheleFranceschini	\N	\N	AmyMichele.Franceschini@unibz.it	0000
132	Alessandra	Giglio	\N	\N	Alessandra.Giglio@unibz.it	0000
133	Emilio	Grazzi	+39	0471 015284	Emilio.Grazzi@unibz.it	0000
135	Steffen	Kehrle	\N	\N	Steffen.Kehrle@unibz.it	0000
136	Kira	Kessler	\N	\N	Kira.Kessler@unibz.it	0000
137	Daniele	VincenzoLupo	\N	\N	Daniele.Lupo@unibz.it	0000
138	Christian	Mariacher	+39	0471 015104	Christian.Mariacher@unibz.it	0000
139	Luca	Martorano	+39	0471 015225	Luca.Martorano@unibz.it	0000
140	Alessandro	Mason	+39	0471 015105	Alessandro.Mason@unibz.it	0000
141	Francesco	Mattuzzi	+39	0471 015009	Francesco.Mattuzzi2@unibz.it	0000
142	Thomas	Mayfried	+39	0471 015328	Thomas.Mayfried@unibz.it	0000
143	Matteo	MariaMoretti	+39	0471 015241	MatteoMaria.Moretti@unibz.it	0000
145	Tiziana	Piccioni	\N	\N	Tiziana.Piccioni2@unibz.it	0000
146	Karl	Pircher	+39	0471 015329	Karl.Pircher@unibz.it	0000
147	Riccardo	Previdi	+39	0471 015100	Riccardo.Previdi@unibz.it	0000
149	Günther	Reifer	\N	\N	Guenther.Reifer@unibz.it	0000
150	Stefano	Riba	+39	0471 015277	Stefano.Riba@unibz.it	0000
151	Ruben	AlfredoRiestraCherbavaz	\N	\N	RubenAlfredo.RiestraCherbavaz@unibz.it	0000
152	Cecilia	Sannella	\N	\N	Cecilia.Sannella@unibz.it	0000
153	Gianluca	Seta	+39	0471 015195	Gianluca.Seta@unibz.it	0000
154	Fredrik	Skåtar	\N	\N	Fredrik.Skatar@unibz.it	0000
155	Francesco	Sommacal	\N	\N	Francesco.Sommacal@unibz.it	0000
156	Lucie	Strecker	\N	\N	AdjaLucieJohanna.Strecker@unibz.it	0000
157	Federico	EttoreMariaTarquini	\N	\N	FedericoEttoreMaria.Tarquini@unibz.it	0000
158	Elisa	Testori	\N	\N	Elisa.Testori@unibz.it	0000
159	Paul	Thuile	+39	0471 015106	paul.thuile@unibz.it	0000
160	Luca	Trevisani	+39	0471 015107	Luca.Trevisani@unibz.it	0000
161	Brigitte	Widmann	+39	0471 013278	BWidmann@unibz.it	0000
162	Jan-Christoph	Zoels	\N	\N	JanChristoph.Zoels@unibz.it	0000
163	Italo	Zuffi	+39	0471 015276	Italo.Zuffi@unibz.it	0000
164	Paolo	Fenu	\N	\N	Paolo.Fenu@unibz.it	0000
165	Rachele	Sordi	\N	\N	Rachele.Sordi@unibz.it	0000
166	Nina	Bassoli	\N	\N	CaterinaAnna.Bassoli@unibz.it	0000
167	Francesca	Brusa	+39	0471 015340	Francesca.Brusa@unibz.it	0000
168	Alexandra	CosimaBudabin	\N	\N	AlexandraCosima.Budabin@unibz.it	0000
169	Gianluca	Fondriest	\N	\N	Gianluca.Fondriest@unibz.it	0000
170	Sabina	Frei	+39	0472 014152	Sabina.Frei@unibz.it	0000
171	Emanuel	Mathias	\N	\N	JohannesEmanuel.Mathias@unibz.it	0000
172	Ignazio	Merino	\N	\N	Ignacio.MerinoSanchezFayos@unibz.it	0000
173	Irene	Nitz	\N	\N	Irene.Nitz@unibz.it	0000
174	Gaia	Piccarolo	\N	\N	Gaia.Piccarolo@unibz.it	0000
175	Elisabetta	Rattalino	+39	0471 015009	Elisabetta.Rattalino@unibz.it	0000
176	Emma	Sicher	\N	\N	Emma.Sicher@unibz.it	0000
177	Noémi	Zajzon	\N	\N	Noemi.Zajzon@unibz.it	0000
178	Oswin	Maurer	+39	0471 013160	oswin.maurer@unibz.it	0000
179	Stefania	Baroncelli	+39	0471 013120	Stefania.Baroncelli@unibz.it	0000
180	Federico	Boffa	+39	0474 013647	FBoffa@unibz.it	0000
181	Massimiliano	Bonacchi	+39	0471 013290	Massimiliano.Bonacchi@unibz.it	0000
182	Lucie	Courteau	+39	0471 013130	Lucie.Courteau@unibz.it	0000
184	Alfredo	DeMassis	+39	0471 013303	Alfredo.DeMassis@unibz.it	0000
185	Paolo	Giudici	+39	0471 013140	Paolo.Giudici@unibz.it	0000
186	Marjaana	Gunkel	+39	0471 013221	Marjaana.Gunkel@unibz.it	0000
187	Andreas	HeinrichHamel	+39	0474 013651	Andreas.Hamel@unibz.it	0000
188	Yuriy	Kaniovskyi	+39	0471 013150	Yuriy.Kaniovskyi@unibz.it	0000
189	Sascha	Kraus	+39	\N	Sascha.Kraus@unibz.it	0000
190	Alexander	Moradi	+39	0471 013135	Alexander.Moradi@unibz.it	0000
191	Maurizio	Murgia	+39	0471 013110	Maurizio.Murgia@unibz.it	0000
192	Alessandro	Narduzzo	+39	0471 013210	Alessandro.Narduzzo@unibz.it	0000
193	Michael	Nippa	+39	0471 013181	Michael.Nippa@unibz.it	0000
194	Francesco	Ravazzolo	+39	0471 013133	Francesco.Ravazzolo@unibz.it	0000
195	Günter	Schamel	+39	0471 013170	Guenter.Schamel@unibz.it	0000
196	Steven	Stillman	+39	0471 013132	Steven.Stillman@unibz.it	0000
197	Mirco	Tonin	+39	0471 013182	Mirco.Tonin@unibz.it	0000
198	Alex	Weissensteiner	+39	0471 013496	Alex.Weissensteiner@unibz.it	0000
199	Claudia	Curi	+39	0471 013498	Claudia.Curi@unibz.it	0000
200	Ivo	DeGennaro	+39	0471 013481	Ivo.DeGennaro@unibz.it	0000
201	Francesca	MartaLiljaDiLascio	+39	0471 013285	Marta.DiLascio@unibz.it	0000
202	Roberto	Farneti	+39	0471 013128	Roberto.Farneti@unibz.it	0000
204	Davide	Ferrari	+39	0471 013307	Davide.Ferrari2@unibz.it	0000
206	Linda	Osti	+39	0474 013643	Linda.Osti@unibz.it	0000
207	Paolo	Perego	+39	0471 013306	Paolo.Perego@unibz.it	0000
208	Stefan	FranzSchubert	+39	0471 013495	StefanFranz.Schubert@unibz.it	0000
209	Per	LinusSiming	+39	0471 013309	PerLinus.Siming@unibz.it	0000
210	Laura	Valle	+39	0471 013494	Laura.Valle@unibz.it	0000
211	Serena	Volo	+39	0474 013644	Serena.Volo@unibz.it	0000
212	Dmitri	Boreiko	+39	0471 013277	Dmitri.Boreiko@unibz.it	0000
213	Hannes	HerbertViktorHofmeister	+39	0471 013482	hannes.hofmeister@unibz.it	0000
214	Peter	Agstner	+39	0471 013288	Peter.Agstner@unibz.it	0000
215	Jacob	CharlesBarr	+39	0471 013526	JacobCharles.Barr@unibz.it	0000
216	Olga	StanislavovnaBogachek	\N	\N	Olga.Bogachek@unibz.it	0000
217	Silvia	Bressan	+39	0471 013304	Silvia.Bressan@unibz.it	0000
218	Valeria	Cavotta	+39	0471 013522	Valeria.Cavotta@unibz.it	0000
219	Paolo	Coletti	+39	0471 013509	Paolo.Coletti@unibz.it	0000
220	Nicola	DallaVia	+39	0471 013535	Nicola.DallaVia@unibz.it	0000
221	Claudia	DiCaterina	\N	\N	Claudia.DiCaterina@unibz.it	0000
222	Sylvia	VeroniqueHubner	\N	\N	SylviaVeronique.Hubner@unibz.it	0000
223	Daniel	Kostner	+39	0471 013507	Daniel.Kostner@unibz.it	0000
224	Sara	Longo	+39	0471 013551	Sara.Longo@unibz.it	0000
225	Ralf	Lüfter	+39	0471 013293	RLuefter@unibz.it	0000
226	Ivan	Miroshnychenko	+39	0471 013023	Ivan.Miroshnychenko@unibz.it	0000
227	Michele	Pinelli	\N	\N	Michele.Pinelli@unibz.it	0000
228	Paolo	Roberti	+39	0471 013552	Paolo.Roberti@unibz.it	0000
229	Monica	Rosini	+39	0471 013017	Monica.Rosini@unibz.it	0000
230	Paola	Rovelli	+39	0471 013022	Paola.Rovelli@unibz.it	0000
231	Francisco	JavierSantos-Arteaga	+39	0471 013230	FSantosArteaga@unibz.it	0000
232	Oksana	Tokarchuk	+39	0471 013020	Oksana.Tokarchuk@unibz.it	0000
233	Valerio	Veglio	+39	0471 013523	Valerio.Veglio@unibz.it	0000
234	Daniela	Visetti	+39	0474 013642	Daniela.Visetti@unibz.it	0000
237	Sara	Addamo	\N	\N	Sara.Addamo@unibz.it	0000
238	Thomas	Aichner	+39	0471 013278	Thomas.Aichner1@unibz.it	0000
239	Cristina	Algranati	\N	\N	Cristina.Algranati@unibz.it	0000
240	Riccardo	Andriolo	\N	\N	Riccardo.Andriolo@unibz.it	0000
241	Michele	Baggio	\N	\N	Michele.Baggio@unibz.it	0000
242	Gianluigi	Bizioli	\N	\N	Gianluigi.Bizioli@unibz.it	0000
243	Andrea	Bonoldi	+39	0471 013278	Andrea.Bonoldi@unibz.it	0000
244	Harald	MassimoBonura	\N	\N	HaraldMassimo.Bonura@unibz.it	0000
245	Matteo	Borzaga	\N	0471 013278	matteo.borzaga@unibz.it	0000
247	Lucia	Busatta	\N	\N	Lucia.Busatta@unibz.it	0000
248	Marco	Cagol	\N	\N	marco.cagol@unibz.it	0000
249	Massimo	Cannas	\N	\N	Massimo.Cannas@unibz.it	0000
250	Roberto	Casarin	\N	\N	Roberto.Casarin@unibz.it	0000
251	Paolo	Chiocchetti	\N	\N	Paolo.Chiocchetti@unibz.it	0000
252	Fabio	Ciaponi	\N	\N	Fabio.Ciaponi@unibz.it	0000
253	Giulia	GiusyCusenza	\N	\N	GiuliaGiusy.Cusenza@unibz.it	0000
254	Vincenzo	DellaSala	+39	0471 013278	Vincenzo.DellaSala1@unibz.it	0000
255	Siavash	Farahbakhsh	+39	0471 013502	Siavash.Farahbakhsh@unibz.it	0000
256	Renate	Fauner	\N	\N	Renate.Fauner@unibz.it	0000
257	Roberto	Fazioli	\N	\N	Roberto.Fazioli@unibz.it	0000
258	Eberhard	Feess	+39	0474 013642	eberhard.feess@unibz.it	0000
260	Francesca	Franco	\N	\N	Francesca.Franco@unibz.it	0000
261	Bernhard	JohannesFrick	\N	\N	BernhardJohannes.Frick@unibz.it	0000
262	Jürgen	PeterGedinat	\N	0471 013278	juergenpeter.gedinat@unibz.it	0000
264	Paolo	RobertoGraziano	+39	0471 013278	PaoloRoberto.Graziano@unibz.it	0000
265	Stefan	Gruber	+39	\N	Stefan.Gruber@unibz.it	0000
266	Gennaro	Iaccarino	\N	\N	Gennaro.Iaccarino1@unibz.it	0000
267	Klaudijo	Klaser	\N	\N	Klaudijo.Klaser@unibz.it	0000
268	Rudolf	HeinrichKuhn	+39	0471 013278	Heinrich.Kuhn@unibz.it	0000
269	Christian	ManfredLechner	+39	0471 013200	christian.lechner@unibz.it	0000
270	Alessandra	Magliaro	\N	\N	Alessandra.Magliaro@unibz.it	0000
271	Marco	Magnani	\N	\N	Marco.Magnani@unibz.it	0000
272	Marco	Mainardi	\N	\N	Marco.Mainardi@unibz.it	0000
273	Paolo	Maraner	+39	0471 013288	PMaraner@unibz.it	0000
274	Luca	Menicacci	\N	\N	Luca.Menicacci@unibz.it	0000
275	Francesca	Mercuri	\N	\N	FMercuri@unibz.it	0000
276	Alfonso	MerelloAstigarraga	\N	\N	alfonso.merelloastigarraga@unibz.it	0000
277	Antonio	Merlino	\N	\N	Antonio.Merlino@unibz.it	0000
278	Emilia	PieraMerlotti	\N	\N	EmiliaPiera.Merlotti@unibz.it	0000
279	Maja	Miletic	\N	\N	Maja.Miletic@unibz.it	0000
281	Paolo	Nitti	\N	\N	Paolo.Nitti@unibz.it	0000
282	Christoph	Perathoner	\N	\N	Christoph.Perathoner@unibz.it	0000
283	Elisabeth	Peterlini	\N	\N	Elisabeth.Peterlini@unibz.it	0000
284	Oskar	Peterlini	+39	0471 013288	Oskar.Peterlini@unibz.it	0000
285	Martin	ChristophPiber	+39	0471 013278	MartinChristoph.Piber@unibz.it	0000
286	Teresio	Poggio	\N	\N	Teresio.Poggio@unibz.it	0000
287	Holger	Preuß	\N	\N	Holger.Preuss@unibz.it	0000
289	Frieda	Raich	\N	\N	Frieda.Raich@unibz.it	0000
290	Leonardo	Rinaldi	\N	\N	Leonardo.Rinaldi@unibz.it	0000
292	Eduardo	Rossi	\N	\N	Eduardo.Rossi@unibz.it	0000
293	Fabrizio	Rossi	\N	\N	Fabrizio.Rossi@unibz.it	0000
294	Bernhard	HeinrichRothbucher	\N	\N	BernhardHeinrich.Rothbucher2@unibz.it	0000
295	Maria	ChiaraRusca	\N	\N	MariaChiara.Rusca@unibz.it	0000
296	Björn	Schäfer	\N	0474 013600	Bjoern.Schaefer@unibz.it	0000
297	Antonio	Schizzerotto	\N	\N	Antonio.Schizzerotto@unibz.it	0000
298	Peter	AlfonsSchmid	\N	\N	PeterAlfons.Schmid@unibz.it	0000
299	Robert	Simon	\N	\N	RSimon@unibz.it	0000
300	Simone	Simonelli	+39	0471 015246	simone.simonelli@unibz.it	0000
301	Damiano	MarinoSomenzi	+39	0471 013288	Damiano.Somenzi@unibz.it	0000
302	Alessandro	Stanchi	\N	\N	Alessandro.Stanchi@unibz.it	0000
303	Andrea	Tenucci	\N	\N	Andrea.Tenucci@unibz.it	0000
304	Marta	Tomasi	\N	\N	Marta.Tomasi@unibz.it	0000
305	Rudi	Tranquillini	\N	\N	Rudi.Tranquillini@unibz.it	0000
306	Paolo	Vidoni	\N	\N	Paolo.Vidoni@unibz.it	0000
308	Candace	LaurelBarr	+39	0471 013515	CandaceLaurel.Barr@unibz.it	0000
309	Sara	Boni	\N	\N	Sara.Boni@unibz.it	0000
310	Alessio	Brutti	+39	0471 013278	ABrutti@unibz.it	0000
312	Iuliana	Ionitel	\N	\N	Iuliana.Ionitel@unibz.it	0000
314	Roberto	Longo	+39	0471 013278	Roberto.Longo@unibz.it	0000
315	Anja	Meyer	\N	\N	Anja.Meyer@unibz.it	0000
316	Elena	Michelin	\N	\N	Elena.Michelin@unibz.it	0000
317	Alessandro	Pallaoro	+39	0471 013288	Alessandro.Pallaoro@unibz.it	0000
318	Anita	RaniSunda	\N	\N	AnitaRani.Sunda@unibz.it	0000
319	Andrea	Toto	+39	0471 013534	Andrea.Toto@unibz.it	0000
320	Lisa	Widmann	\N	\N	Lisa.Widmann@unibz.it	0000
321	Roberta	Zanoni	\N	\N	Roberta.Zanoni@unibz.it	0000
322	Juliana	Bernhofer	\N	\N	Juliana.Bernhofer@unibz.it	0000
324	Muhammed	Ceesay	\N	\N	Muhammed.Ceesay@unibz.it	0000
325	Claudia	Cozzio	\N	\N	Claudia.Cozzio@unibz.it	0000
326	Jan	Ditzen	\N	\N	Jan.Ditzen@unibz.it	0000
327	Giacomo	Falchetta	\N	\N	Giacomo.Falchetta@unibz.it	0000
328	Orsolya	Farkas	\N	\N	Orsolya.Farkas@unibz.it	0000
329	Aicha	Kharazi	\N	\N	Aicha.Kharazi@unibz.it	0000
330	Alexia	Lochmann	\N	\N	Alexia.Lochmann@unibz.it	0000
331	Andrea	Menapace	+39	0471 017742	Andrea.Menapace@unibz.it	0000
332	Chiara	Menini	+39	0471 017805	Chiara.Menini@unibz.it	0000
333	Francesca	Papagni	\N	\N	Francesca.Papagni@unibz.it	0000
334	Selene	Perazzini	\N	\N	Selene.Perazzini@unibz.it	0000
335	Sandro	Rondinella	\N	\N	Sandro.Rondinella@unibz.it	0000
336	Paul	Videsott	+39	0472 014801	Paul.Videsott@unibz.it	0000
337	Birgit	Alber	+39	0472 014210	Birgit.Alber@unibz.it	0000
338	Giorgio	Bolondi	+39	0472 014351	Giorgio.Bolondi@unibz.it	0000
339	Attilio	Carraro	+39	0472 014390	Attilio.Carraro@unibz.it	0000
340	Giulia	Cavrini	+39	0472 014340	GCavrini@unibz.it	0000
341	Franz	Comploi	+39	0472 014240	Franz.Comploi@unibz.it	0000
342	Federico	Corni	+39	0472 014380	Federico.Corni@unibz.it	0000
343	Silvia	DalNegro	+39	0471 012456	Silvia.DalNegro@unibz.it	0000
344	Liliana	Dozza	+39	0472 014120	liliana.dozza@unibz.it	0000
345	Susanne	UrsulaElsen	+39	0472 014330	susanne.elsen@unibz.it	0000
346	Rita	Franceschini	+39	0471 012461	Rita.Franceschini@unibz.it	0000
347	Michael	Gaidoschik	+39	0472 014350	Michael.Gaidoschik@unibz.it	0000
348	Jeanette	Hoffmann	+39	0472 014130	Jeanette.Hoffmann@unibz.it	0000
349	Dario	Ianes	+39	0472 014250	Dario.Ianes@unibz.it	0000
350	Daniele	Ietri	+39	0472 014360	Daniele.Ietri@unibz.it	0000
351	Iris	Nentwig-Gesemann	+39	0472 014180	Iris.NentwigGesemann@unibz.it	0000
352	Sven	Nickel	+39	0472 014135	SvenAndreasJens.Nickel@unibz.it	0000
353	Simone	Seitz	+39	0472 014160	Simone.Seitz@unibz.it	0000
354	Ulrike	MarionStadler-Altmann	+39	0472 014270	Ulrike.StadlerAltmann@unibz.it	0000
355	Johannes	TheodorusvanderSandt	+39	0472 014243	JohannesTheodorus.vanderSandt@unibz.it	0000
356	Gerwald	Wallnöfer	+39	0472 014140	Gerwald.Wallnoefer@unibz.it	0000
358	Annemarie	AugschöllBlasbichler	+39	0472 014191	annemarie.augschoell@unibz.it	0000
360	Antonella	Brighi	+39	0472 014295	Antonella.Brighi@unibz.it	0000
362	Heidrun	Demo	+39	0472 014771	Heidrun.Demo2@unibz.it	0000
363	Maria	CristinaGatti	+39	0472 014112	MariaCristina.Gatti@unibz.it	0000
364	Ulrike	ElfriedeLoch	+39	0472 014312	Ulrike.Loch@unibz.it	0000
365	Alessandro	Luigini	+39	0472 014776	Alessandro.Luigini@unibz.it	0000
366	Urban	Nothdurfter	+39	0472 014151	Urban.Nothdurfter2@unibz.it	0000
367	Annemarie	Profanter	+39	0472 014141	Annemarie.Profanter@unibz.it	0000
368	Ildikò	ErikaStephanieRisse	+39	0472 014115	Stephanie.Risse@unibz.it	0000
369	Paolo	Somigli	+39	0472 014242	PSomigli@unibz.it	0000
370	Kolis	Summerer	+39	\N	kolis.summerer@unibz.it	0000
372	Reinhard	Tschiesner	+39	0472 014293	reinhard.tschiesner@unibz.it	0000
373	Alessandro	Vietti	+39	0471 012452	Alessandro.Vietti@unibz.it	0000
374	Beate	ChristineWeyland	+39	0472 014852	Beate.Weyland@unibz.it	0000
375	Barbara	Caprara	+39	0472 014162	barbara.caprara@unibz.it	0000
376	Martina	Irsara	+39	0472 014114	Martina.Irsara@unibz.it	0000
377	Doris	Kofler	+39	0472 014172	Doris.Kofler@unibz.it	0000
378	Vanessa	Macchia	+39	0472 014774	Vanessa.Macchia@unibz.it	0000
379	Monica	AdrianaParricchi	+39	0472 014200	MParricchi@unibz.it	0000
381	Daniela	Veronesi	+39	0471 012451	Daniela.Veronesi@unibz.it	0000
382	Renata	ZaninScaratti	+39	0472 014111	zanin@unibz.it	0000
383	Tobias	Boos	\N	0472 014361	Tobias.Boos@unibz.it	0000
384	Michele	Cagol	\N	\N	Michele.Cagol@unibz.it	0000
385	Elisa	Cisotto	+39	0472 014342	Elisa.Cisotto@unibz.it	0000
386	Antonella	Coppi	+39	0472 014244	Antonella.Coppi@unibz.it	0000
387	Milvia	Cottini	+39	0472 014296	Milvia.Cottini@unibz.it	0000
388	Silvia	Dell'Anna	\N	\N	Silvia.DellAnna@unibz.it	0000
389	Andrea	DiMichele	+39	0472 014372	Andrea.DiMichele@unibz.it	0000
390	Giulia	Gabrielli	+39	0472 014241	Giulia.Gabrielli@unibz.it	0000
391	Barbara	Gross	+39	0472 014274	Barbara.Gross2@unibz.it	0000
392	Cecilia	Lazzeretti	\N	\N	Cecilia.Lazzeretti@unibz.it	0000
393	Claudia	Lintner	+39	0472 014332	claudia.lintner2@unibz.it	0000
394	Lynn	Mastellotto	+39	0472 014246	Lynn.Mastellotto@unibz.it	0000
395	Daniele	Morselli	+39	0472 014121	Daniele.Morselli@unibz.it	0000
396	Andrea	Nagy	+39	0472 014157	Andrea.Nagy@unibz.it	0000
397	Norbert	Parschalk	+39	0472 014116	Norbert.Parschalk@unibz.it	0000
398	Daniela	Salvucci	+39	0472 014222	Daniela.Salvucci@unibz.it	0000
399	Katharina	Salzmann	+39	0472 014113	Katharina.Salzmann@unibz.it	0000
400	George	RichardPaulSanti	+39	0472 014354	GeorgeRichardPaul.Santi@unibz.it	0000
401	Susanne	Schumacher	+39	0472 014271	Susanne.Schumacher@unibz.it	0000
402	Luisa	Tasca	\N	\N	Luisa.Tasca@unibz.it	0000
403	Livia	Taverna	+39	0472 014290	Livia.Taverna@unibz.it	0000
404	Patrizia	Tortella	+39	\N	Patrizia.Tortella@unibz.it	0000
405	Maria	TeresaTrisciuzzi	+39	0472 014778	MariaTeresa.Trisciuzzi@unibz.it	0000
406	Laura	Trott	+39	0472 014905	laura.trott@unibz.it	0000
407	Ewa	Trutkowski	+39	0472 014117	Ewa.Trutkowski@unibz.it	0000
408	Cecilia	Varcasia	+39	0471 012482	Cecilia.Varcasia@unibz.it	0000
409	Ruth	Videsott	+39	0472 014802	Ruth.Videsott1@unibz.it	0000
410	Federica	Viganò	+39	0472 014123	federica.vigano@unibz.it	0000
411	Cinzia	Zadra	+39	0472 014906	Cinzia.Zadra@unibz.it	0000
412	Andrea	Abel	\N	\N	Andrea.Abel1@unibz.it	0000
413	Susanne	Abram	\N	\N	Susanne.Abram3@unibz.it	0000
414	Marco	Accorinti	\N	\N	Marco.Accorinti@unibz.it	0000
415	Miglena	Asenova	\N	\N	Miglena.Asenova@unibz.it	0000
416	Veronica	Azzali	\N	\N	Veronica.Azzali@unibz.it	0000
417	Silvia	Azzolin	\N	\N	Silvia.Azzolin@unibz.it	0000
418	Alessandro	Babini	\N	\N	Alessandro.Babini@unibz.it	0000
419	Péter	Bagoly-Simó	\N	\N	Peter.BagolySimo@unibz.it	0000
420	Carlo	ZelindoBaruffi	\N	\N	Carlo.Baruffi@unibz.it	0000
421	Alessandra	Basile	\N	\N	Alessandra.Basile@unibz.it	0000
422	Alessandro	Basso	\N	\N	Alessandro.Basso@unibz.it	0000
423	Hannelore	Battisti	+39	0471 012702	Hannelore.Battisti@unibz.it	0000
424	Kirsten	HergitBeier-Marchesi	\N	\N	KirstenHergit.BeierMarchesi@unibz.it	0000
425	Ruth	Bernardi	\N	\N	Ruth.Bernardi@unibz.it	0000
426	Armin	Bernhard	\N	\N	Armin.Bernhard@unibz.it	0000
427	Toni	Bernhart	\N	\N	Anton.Bernhart@unibz.it	0000
428	Angelo	Besana	\N	\N	Angelo.Besana@unibz.it	0000
429	Ermenegildo	Bidese	\N	\N	Ermenegildo.Bidese@unibz.it	0000
430	Christoph	Bierschwale	\N	\N	Christoph.Bierschwale@unibz.it	0000
431	Battista	Borghi	\N	\N	Battista.Borghi@unibz.it	0000
433	Hans	PeterBrandl-Bredenbeck	\N	\N	HansPeter.BrandlBredenbeck@unibz.it	0000
435	Graham	FrancisBurton	\N	\N	GrahamFrancis.Burton@unibz.it	0000
436	Ursula	BettyCarle	\N	\N	UrsulaBetty.Fluegel@unibz.it	0000
437	Erika	Castlunger	\N	\N	Erika.Castlunger2@unibz.it	0000
438	Rico	MathiasCathomas	+39	0472 014803	Rico.Cathomas@unibz.it	0000
439	Filippo	CarloCeretti	\N	\N	FilippoCarlo.Ceretti@unibz.it	0000
440	Fabio	Chiocchetti	\N	\N	Fabio.Chiocchetti@unibz.it	0000
441	Nadia	Chiocchetti	\N	\N	Nadia.Chiocchetti1@unibz.it	0000
442	Leonardo	Colletti	\N	\N	Leonardo.Colletti@unibz.it	0000
443	Carla	MariaComploj	\N	\N	CarlaMaria.Comploj@unibz.it	0000
444	Andreas	Conca	\N	\N	Andreas.Conca@unibz.it	0000
445	Sofia	Cramerotti	\N	\N	Sofia.Cramerotti@unibz.it	0000
446	Vito	DeNardis	\N	\N	Vito.DeNardis@unibz.it	0000
447	Alessandra	DeNicola	\N	\N	Alessandra.DeNicola@unibz.it	0000
448	Andreas	Declara	\N	\N	Andreas.Declara@unibz.it	0000
449	Nicola	Dicecca	\N	\N	Nicola.Dicecca@unibz.it	0000
450	Birgit	Dissertori	\N	\N	Birgit.Dissertori@unibz.it	0000
451	Silvia	D'Ortenzio	\N	\N	Silvia.DOrtenzio@unibz.it	0000
452	Luca	Ducceschi	\N	\N	Luca.Ducceschi@unibz.it	0000
453	Ludwig	MichaelDuncker	\N	\N	LudwigMichael.Duncker@unibz.it	0000
454	Viola	Durini	\N	\N	Viola.Durini@unibz.it	0000
455	Michela	Eccher	\N	\N	Michela.Eccher@unibz.it	0000
456	Benedikt	Egger	\N	\N	Benedikt.Egger2@unibz.it	0000
457	Johann	Eichbichler	\N	\N	Johann.Eichbichler2@unibz.it	0000
458	Andreas	Eylert-Schwarz	\N	\N	Andreas.EylertSchwarz@unibz.it	0000
459	Mario	Falanga	+39	\N	mario.falanga@unibz.it	0000
460	Ettore	Favaretto	\N	\N	Ettore.Favaretto@unibz.it	0000
461	Luca	Fazzi	\N	\N	Luca.Fazzi@unibz.it	0000
462	Rosa	AnnaFerdigg	+39	\N	RosaAnna.Ferdigg@unibz.it	0000
463	Doris	Forer	\N	\N	Doris.Forer@unibz.it	0000
464	Friedhelm	KarlFrank	\N	\N	Friedhelm.Frank@unibz.it	0000
465	Donatella	Frioli	\N	\N	Donatella.Frioli@unibz.it	0000
466	Michael	Frischmann	\N	\N	Michael.Frischmann@unibz.it	0000
467	Alessandra	GalizziKroegel	\N	\N	Alessandra.GalizziKroegel@unibz.it	0000
468	Maria	Gall	\N	\N	Maria.Gall@unibz.it	0000
469	Francesco	Ganzaroli	\N	\N	Francesco.Ganzaroli1@unibz.it	0000
470	Emanuela	Ghelardini	\N	\N	Emanuela.Ghelardini@unibz.it	0000
471	Marta	Ghilardi	\N	\N	Marta.Ghilardi@unibz.it	0000
473	Andrea	Giorgi	\N	\N	Andrea.Giorgi@unibz.it	0000
474	Sara	Giovine	\N	\N	Sara.Giovine@unibz.it	0000
475	Gertraud	GirardiBattisti	\N	\N	Gertraud.Girardi@unibz.it	0000
476	Valentina	GobbettBamber	\N	\N	VGobbettBamber@unibz.it	0000
477	Marco	Gozzi	\N	\N	Marco.Gozzi@unibz.it	0000
478	Bernadette	MariaGrießmair	\N	\N	BernadetteMaria.Griessmair@unibz.it	0000
479	Roberto	Gris	\N	\N	Roberto.Gris@unibz.it	0000
480	Petra	Gruber	\N	\N	Petra.Gruber@unibz.it	0000
481	Andreas	Hapkemeyer	\N	\N	andreas.hapkemeyer@unibz.it	0000
482	Alois	Hechenberger	+39	0472 014000	Alois.Hechenberger@unibz.it	0000
483	Renate	MariaHeissl	\N	\N	RenateMaria.Heissl@unibz.it	0000
484	Barbara	Hofer	\N	\N	Barbara.Hofer1@unibz.it	0000
485	Ingrid	Hofer	\N	\N	Ingrid.Hofer@unibz.it	0000
486	Sabine	Hofer	\N	\N	Sabine.Hofer1@unibz.it	0000
488	Gabriele	Iannàccaro	\N	\N	Gabriele.Iannaccaro@unibz.it	0000
489	Klaus-Ove	Kahrmann	\N	\N	Ove.Kahrmann@unibz.it	0000
490	Thomas	HubertKellner	\N	\N	ThomasHubert.Kellner@unibz.it	0000
491	Heinrich	Keupp	\N	\N	heinrich.keupp@unibz.it	0000
492	Valentina	Kiesswetter	\N	\N	Valentina.Kiesswetter@unibz.it	0000
493	Martina	Koler	\N	\N	Martina.Koler@unibz.it	0000
494	Peter	Koler	\N	\N	Peter.Koler@unibz.it	0000
495	Peter	Köllensperger	+39	0472 014009	Peter.Koellensperger@unibz.it	0000
496	Sally	Kowanda	\N	\N	sally.kowanda@unibz.it	0000
497	Christian	Krampe	\N	\N	ChristianJohannes.Krampe@unibz.it	0000
498	Elke	IngridAnneloreKruse	\N	\N	Elke.Kruse@unibz.it	0000
499	Christian	Laner	\N	\N	Christian.Laner@unibz.it	0000
500	Monika	Lanthaler	\N	\N	Monika.Lanthaler@unibz.it	0000
501	Silvia	Leider	\N	\N	Silvia.Leider1@unibz.it	0000
502	Franz	Lemayr	\N	\N	Franz.Lemayr@unibz.it	0000
503	Christian	Liclair	\N	\N	Christian.Liclair@unibz.it	0000
504	Walter	AugustLorenz	+39	0472 014150	Walter.Lorenz@unibz.it	0000
505	Julia	ChristinaLutz	\N	\N	JuliaChristina.Lutz@unibz.it	0000
506	Anita	Macauda	\N	\N	Anita.Macauda@unibz.it	0000
508	Thomas	Maran	\N	\N	Thomas.Maran@unibz.it	0000
509	Michele	Marcaccio	\N	\N	Michele.Marcaccio@unibz.it	0000
510	Elena	Mattevi	\N	\N	Elena.Mattevi@unibz.it	0000
511	Manuel	Mattion	\N	\N	Manuel.Mattion@unibz.it	0000
512	Ivo	Mattozzi	\N	\N	Ivo.Mattozzi@unibz.it	0000
513	Gisela	Mayr	\N	\N	Gisela.Mayr@unibz.it	0000
514	Carmine	Mazzia	\N	\N	Carmine.Mazzia@unibz.it	0000
515	Elisa	Mazzurana	\N	\N	Elisa.Mazzurana@unibz.it	0000
517	Giovanni	Mischi	+39	0472 014804	giovanni.mischi@unibz.it	0000
518	Helga	Mock	\N	\N	Helga.Mock2@unibz.it	0000
520	Carsten	Möller	\N	\N	Carsten.Moeller@unibz.it	0000
521	Barbara	Natter	\N	\N	barbara.natter2@unibz.it	0000
522	Margit	Oberhammer	\N	\N	Margit.Oberhammer@unibz.it	0000
523	Alessandra	Oretti	\N	\N	Alessandra.Oretti@unibz.it	0000
524	Angelika	Pahl	\N	\N	Angelika.Pahl1@unibz.it	0000
525	Chiara	Panciroli	\N	\N	Chiara.Panciroli@unibz.it	0000
526	Giuseppina	Pani	\N	\N	Giuseppina.Pani@unibz.it	0000
527	Adriana	Paolini	\N	\N	Adriana.Paolini@unibz.it	0000
528	Birgit	Pardatscher	\N	\N	Birgit.Pardatscher@unibz.it	0000
529	Monica	Pasqualoni	\N	\N	Monica.Pasqualoni@unibz.it	0000
530	Mirca	Passarella	\N	\N	Mirca.Passarella@unibz.it	0000
531	Simone	Passarella	\N	\N	Simone.Passarella@unibz.it	0000
532	Pia	Pedevilla	\N	\N	Pia.Pedevilla@unibz.it	0000
533	Eleonora	Pedron	\N	\N	Eleonora.Pedron@unibz.it	0000
534	Silvia	Pellizzari	\N	\N	Silvia.Pellizzari@unibz.it	0000
535	Artur	Pernstich	\N	\N	artur.pernstich@unibz.it	0000
536	Ilaria	Perrucci	\N	\N	Ilaria.Perrucci@unibz.it	0000
538	Sabine	Piazza	\N	\N	Sabine.Piazza@unibz.it	0000
539	Barbara	Plagg	\N	\N	Barbara.Plagg@unibz.it	0000
541	Marco	Pontis	\N	\N	Marco.Pontis1@unibz.it	0000
542	Susanne	KunigundeMariannePopp	\N	\N	SusanneKunigundeMarianne.Popp1@unibz.it	0000
543	Cesare	Poppi	\N	\N	Cesare.Poppi@unibz.it	0000
544	Claudia	Provenzano	\N	\N	Claudia.Provenzano@unibz.it	0000
545	Ursula	Pulyer	\N	\N	Ursula.Pulyer2@unibz.it	0000
546	Maria	TeresaRabitti	\N	\N	MariaTeresa.Rabitti@unibz.it	0000
547	Matthias	Ratering	\N	\N	Matthias.Ratering@unibz.it	0000
548	Paul	Resinger	\N	\N	Paul.Resinger@unibz.it	0000
549	Veronika	Rieder	\N	\N	Veronika.Rieder@unibz.it	0000
550	Klaudia	Rinner	\N	\N	Klaudia.Rinner@unibz.it	0000
552	Francesco	Rovatti	\N	\N	Francesco.Rovatti1@unibz.it	0000
553	Antonietta	Rozzi	\N	\N	ARozzi@unibz.it	0000
554	Veronica	Rubatscher	\N	\N	Veronica.Rubatscher@unibz.it	0000
555	Giampaolo	Salvi	\N	\N	Giampaolo.Salvi@unibz.it	0000
556	Gerhard	PeterSammer	\N	\N	GerhardPeter.Sammer@unibz.it	0000
557	Sara	Santinelli	\N	\N	Sara.Santinelli@unibz.it	0000
558	Giannantonio	Scaglione	\N	\N	Giannantonio.Scaglione@unibz.it	0000
559	Caterina	Scapin	\N	\N	Caterina.Scapin@unibz.it	0000
560	Rosemarie	Schenk	\N	\N	Rosemarie.Schenk@unibz.it	0000
561	Reinhart	AlexanderSchettler	\N	\N	ReinhartAlexander.Schettler1@unibz.it	0000
562	Barbara	Schuster	\N	\N	Barbara.Schuster@unibz.it	0000
563	Hansjörg	Schweigkofler	\N	\N	Hansjoerg.Schweigkofler@unibz.it	0000
564	Giuseppe	Sciortino	\N	\N	Giuseppe.Sciortino@unibz.it	0000
565	Claudia	BettinaScochi	+39	0472 014950	ClaudiaBettina.Scochi@unibz.it	0000
566	Ilke	Senoner	\N	\N	Ilke.Senoner@unibz.it	0000
567	Birgit	Spechtenhauser	\N	\N	Birgit.Spechtenhauser1@unibz.it	0000
568	Monika	Spinell	\N	\N	Monika.Spinell@unibz.it	0000
569	Verena	Stragenegg	\N	\N	Verena.Stragenegg@unibz.it	0000
570	Annika	Sulzer	\N	\N	Annika.Sulzer@unibz.it	0000
571	Giorgio	TavanoBlessi	\N	\N	GTavanoBlessi@unibz.it	0000
572	Irina	Tavella	\N	\N	Irina.Tavella@unibz.it	0000
573	Antonella	Tiburzi	\N	\N	Antonella.Tiburzi@unibz.it	0000
575	Valeria	Tonioli	\N	\N	Valeria.Tonioli@unibz.it	0000
576	Paolo	Trubiano	\N	\N	Paolo.Trubiano@unibz.it	0000
577	Claus	JohannTully	\N	\N	CTully@unibz.it	0000
578	Massimo	Turrini	\N	\N	Massimo.Turrini@unibz.it	0000
579	Marco	Uvietta	\N	\N	Marco.Uvietta@unibz.it	0000
580	Starlight	Vattano	\N	\N	Starlight.Vattano@unibz.it	0000
581	Maria	Ventura	\N	\N	Maria.Ventura2@unibz.it	0000
582	Irene	Verra	\N	\N	Irene.Verra@unibz.it	0000
583	Sergio	Vicini	\N	\N	Sergio.Vicini@unibz.it	0000
584	Esther	Videsott	\N	\N	Esther.Videsott@unibz.it	0000
585	Andrea	Vitali	\N	\N	Andrea.Vitali1@unibz.it	0000
586	Stefan	VonProndzinski	\N	\N	Stefan.Vonprondzinski@unibz.it	0000
587	Burkhard	Wermter	\N	\N	Burkhard.Wermter@unibz.it	0000
588	Franziska	Zemmer	\N	\N	Franziska.Zemmer@unibz.it	0000
589	Barbara	Zihl	\N	\N	Barbara.Zihl@unibz.it	0000
591	Marjan	Asgari	\N	\N	Marjan.Asgari@unibz.it	0000
593	Gian	MarcoCaletti	\N	\N	GianMarco.Caletti@unibz.it	0000
594	Carla	Cardinaletti	\N	\N	Carla.Cardinaletti@unibz.it	0000
595	Bernardino	Chiocchetti	\N	\N	Bernardino.Chiocchetti@unibz.it	0000
596	Cristiana	Conti	\N	\N	Cristiana.Conti@unibz.it	0000
597	Giuseppina	Crescenzo	\N	\N	Giuseppina.Crescenzo@unibz.it	0000
598	Donatella	Dellagiacoma	\N	\N	Donatella.Dellagiacoma1@unibz.it	0000
599	Jasmine	AnnetteDorigo	\N	\N	JasmineAnnette.Dorigo1@unibz.it	0000
600	Sara	Franch	\N	\N	Sara.Franch@unibz.it	0000
602	Hans	UlrichFuchs	\N	\N	HansUlrich.Fuchs@unibz.it	0000
603	Marzia	Garzetti	\N	\N	Marzia.Garzetti@unibz.it	0000
604	Rita	Giglio	\N	\N	Rita.Giglio@unibz.it	0000
605	Teresa	Giovanazzi	\N	\N	Teresa.Giovanazzi@unibz.it	0000
606	Alexander	Glück	\N	\N	Alexander.Glueck@unibz.it	0000
607	Joachim	HenriKokkelmans	\N	\N	JoachimHenri.Kokkelmans@unibz.it	0000
608	Maria	HericaLaValle	\N	\N	MariaHerica.LaValle@unibz.it	0000
609	Mara	MayaVictoriaLeonardi	+39	0471 012457	Mara.Leonardi@unibz.it	0000
610	Tiziana	Mascia	\N	\N	Tiziana.Mascia@unibz.it	0000
611	Matteo	LeonidaMattheudakis	\N	\N	MatteoLeonida.Mattheudakis@unibz.it	0000
612	Daniela	Mereu	\N	\N	Daniela.Mereu@unibz.it	0000
613	Roberta	Mira	\N	\N	Roberta.Mira@unibz.it	0000
614	Salvatore	Monaco	\N	\N	Salvatore.Monaco@unibz.it	0000
615	Giorgia	Ruzzante	\N	\N	Giorgia.Ruzzante@unibz.it	0000
616	Francesca	SangiulianoIntra	\N	\N	Francesca.SangiulianoIntra@unibz.it	0000
617	Almut	Schneider	\N	\N	Almut.Schneider@unibz.it	0000
618	Camilla	Spagnolo	\N	\N	Camilla.Spagnolo@unibz.it	0000
619	Francesca	Uleri	\N	\N	Francesca.Uleri@unibz.it	0000
620	Franca	Zadra	\N	\N	Franca.Zadra@unibz.it	0000
621	Sarah	Zannini	+39	0472 014775	Sarah.Zannini@unibz.it	0000
622	Emil	Girardi	\N	\N	Emil.Girardi1@unibz.it	0000
623	Luca	Passarella	\N	\N	Luca.Passarella@unibz.it	0000
624	Marco	Gobbetti	+39	0471 017215	Marco.Gobbetti@unibz.it	0000
625	Marco	Baratieri	+39	0471 017201	Marco.Baratieri@unibz.it	0000
626	Maria	LetiziaBertotti	+39	0471 017130	MariaLetizia.Bertotti@unibz.it	0000
627	Stefano	Cesco	+39	0471 017160	stefano.cesco@unibz.it	0000
628	Raffaella	DiCagno	+39	0471 017216	Raffaella.DiCagno@unibz.it	0000
629	Christian	Fischer	+39	0471 017170	Christian.Fischer@unibz.it	0000
630	Andrea	Gasparella	+39	0471 017200	andrea.gasparella@unibz.it	0000
631	Matthias	Gauly	+39	0471 017115	Matthias.Gauly@unibz.it	0000
632	Paolo	Lugli	+39	0471 010201	paolo.lugli@unibz.it	0000
633	Dominik	Matt	+39	0471 017110	Dominik.Matt@unibz.it	0000
634	Fabrizio	Mazzetto	+39	0471 017180	fabrizio.mazzetto@unibz.it	0000
635	Tanja	Mimmo	+39	0471 017161	Tanja.Mimmo@unibz.it	0000
636	Angelika	Peer	+39	0471 017766	Angelika.Peer@unibz.it	0000
637	Maurizio	Righetti	+39	0471 017693	Maurizio.Righetti@unibz.it	0000
638	Matteo	MarioScampicchio	+39	0471 017210	matteo.scampicchio@unibz.it	0000
639	Massimo	Tagliavini	+39	0471 017120	Massimo.Tagliavini@unibz.it	0000
640	Giustino	Tonon	+39	0471 017190	giustino.tonon@unibz.it	0000
641	Renato	Vidoni	+39	0471 017203	renato.vidoni@unibz.it	0000
642	Karl	DietrichvonEllenrieder	+39	0471 017172	Karl.vonEllenrieder@unibz.it	0000
643	Stefan	Zerbe	+39	0471 017150	Stefan.Zerbe@unibz.it	0000
644	Carlo	Andreotti	+39	0471 017122	Carlo.Andreotti@unibz.it	0000
645	Sanja	Baric	+39	0471 017118	Sanja.Baric@unibz.it	0000
646	Emanuele	Boselli	+39	0471 017217	Emanuele.Boselli@unibz.it	0000
647	Francesco	Comiti	+39	0471 017126	Francesco.Comiti@unibz.it	0000
648	Michele	Larcher	+39	0471 017694	Michele.Larcher@unibz.it	0000
649	Niko	Münzenrieder	+39	0471 017037	Niko.Muenzenrieder@unibz.it	0000
650	Guido	Orzes	+39	0471 017697	Guido.Orzes@unibz.it	0000
651	Luisa	Petti	+39	0471 017156	Luisa.Petti@unibz.it	0000
652	Youry	Pii	+39	0471 017164	Youry.Pii@unibz.it	0000
653	Massimiliano	Renzi	+39	0471 017816	Massimiliano.Renzi@unibz.it	0000
654	Camilla	Wellstein	+39	0471 017643	Camilla.Wellstein@unibz.it	0000
655	Sergio	Angeli	+39	0471 017129	Sergio.Angeli@unibz.it	0000
656	Stefano	Benini	+39	0471 017128	Stefano.Benini@unibz.it	0000
657	Lorenzo	Brusetti	+39	0471 017123	Lorenzo.Brusetti@unibz.it	0000
658	Laura	Levaggi	+39	0471 017131	laura.levaggi@unibz.it	0000
659	Andrea	Andreoli	\N	\N	Andrea.Andreoli@unibz.it	0000
660	Marco	Bietresato	+39	0471 017181	Marco.Bietresato@unibz.it	0000
661	Gianmaria	Bonari	+39	\N	Gianmaria.Bonari@unibz.it	0000
662	Yuri	Borgianni	+39	0471 017821	Yuri.Borgianni@unibz.it	0000
663	Luigimaria	Borruso	+39	0471 017610	luigimaria.borruso@unibz.it	0000
664	Stefano	Briola	\N	\N	Stefano.Briola@unibz.it	0000
665	Marco	Caniato	+39	0471 017145	Marco.Caniato@unibz.it	0000
666	Giuseppe	Cantarella	+39	0471 017830	Giuseppe.Cantarella@unibz.it	0000
667	Cristian	Cappellini	\N	\N	Cristian.Cappellini@unibz.it	0000
668	Ilaria	Carafa	\N	\N	Ilaria.Carafa@unibz.it	0000
669	Franco	Concli	+39	0471 017748	Franco.Concli@unibz.it	0000
670	Patrick	Dallasega	+39	0471 017114	Patrick.Dallasega1@unibz.it	0000
671	Giovanna	Ferrentino	+39	0471 017692	Giovanna.Ferrentino@unibz.it	0000
672	Marco	Frego	\N	\N	Marco.Frego@unibz.it	0000
673	Hannes	AndresGamper	\N	\N	Hannes.Gamper@unibz.it	0000
674	Denis	Garoli	\N	\N	Denis.Garoli@unibz.it	0000
675	Helen	ClareHenninger	+39	0471 017154	HelenClare.Henninger@unibz.it	0000
676	Edoardo	Longo	+39	0471 017691	Edoardo.Longo@unibz.it	0000
677	Lorenzo	Maccioni	+39	0471 017732	Lorenzo.Maccioni@unibz.it	0000
678	Georg	Miribung	+39	0471 017718	GMiribung@unibz.it	0000
679	Leonardo	Montagnani	+39	0471 017137	leonardo.montagnani@unibz.it	0000
680	Valentina	Morandi	\N	\N	Valentina.Morandi@unibz.it	0000
681	Ksenia	Morozova	+39	0471 017211	Ksenia.Morozova@unibz.it	0000
682	Medzid	Muhasilovic	+39	0471 017835	Medzid.Muhasilovic@unibz.it	0000
683	Francesco	Patuzzi	+39	0471 017609	Francesco.Patuzzi@unibz.it	0000
684	Giovanni	Pernigotto	+39	0471 017632	Giovanni.Pernigotto@unibz.it	0000
685	Giuseppe	RobertoPisaturo	+39	0471 017144	GiuseppeRoberto.Pisaturo@unibz.it	0000
686	Andrea	Polo	+39	0471 017143	Andrea.Polo@unibz.it	0000
687	Erwin	Rauch	+39	0471 017111	Erwin.Rauch@unibz.it	0000
688	Giovanna	Sacchi	\N	\N	Giovanna.Sacchi@unibz.it	0000
689	Philipp	ChristopherSauer	+39	0471 017764	PhilippChristopher.Sauer@unibz.it	0000
690	Hannes	Schuler	+39	0471 017648	Hannes.Schuler@unibz.it	0000
691	Selena	Tomada	\N	\N	Selena.Tomada@unibz.it	0000
692	Maurizio	Ventura	+39	0471 017806	maurizio.ventura@unibz.it	0000
693	Erich	Wehrle	+39	0471 017698	Erich.Wehrle@unibz.it	0000
694	Damiano	Zanotelli	+39	0471 017121	Damiano.Zanotelli@unibz.it	0000
695	Marta	AcinAlbiac	+39	0471 017769	Marta.AcinAlbiac1@unibz.it	0000
696	Agnese	Aguzzoni	+39	0471 017712	Agnese.Aguzzoni@unibz.it	0000
697	Riccardo	Albertin	+39	0471 017886	Riccardo.Albertin@unibz.it	0000
698	Katharina	Alvera'	\N	\N	Katharina.Alvera@unibz.it	0000
699	Greice	AmaralCarneiro	+39	0471 017780	Greice.AmaralCarneiro@unibz.it	0000
700	Alessandro	Andriolo	\N	\N	alessandro.andriolo@unibz.it	0000
703	Francesco	Bigolin	+39	0471 017091	FBigolin@unibz.it	0000
704	Oussama	Bouaicha	+39	0471 017878	Oussama.Bouaicha@unibz.it	0000
705	Silvia	Celletti	+39	0471 017719	Silvia.Celletti@unibz.it	0000
706	Velio	Coviello	+39	0471 017761	Velio.Coviello@unibz.it	0000
707	Maja	Danovska	+39	0471 017232	Maja.Danovska@unibz.it	0000
709	Riccardo	Favaro	+39	0471 017020	Riccardo.Favaro@unibz.it	0000
710	Muhammad	FaisalFiaz	+39	0471 017789	MuhammadFaisal.Fiaz@unibz.it	0000
711	Giulio	Genova	+39	0471 017222	Giulio.Genova@unibz.it	0000
712	Francesco	Gubert	\N	\N	Francesco.Gubert@unibz.it	0000
713	Florian	Haas	\N	\N	Florian.Haas@unibz.it	0000
715	Petra	Kranebitter	+39	0471 017092	petra.kranebitter@unibz.it	0000
716	Giulia	Marchetti	+39	0471 017226	Giulia.Marchetti@unibz.it	0000
717	Ornella	KongiMosibo	+39	0471 017247	OrnellaKongi.Mosibo@unibz.it	0000
718	Olga	Nikoloudaki	+39	0471 017776	Olga.Nikoloudaki@unibz.it	0000
719	Giorgio	Pavana	\N	\N	Giorgio.Pavana@unibz.it	0000
720	Silvia	Pioli	+39	0471 017684	Silvia.Pioli@unibz.it	0000
721	Simone	Poggesi	+39	0471 017864	Simone.Poggesi@unibz.it	0000
722	Mose'	Rossi	+39	0471 017701	Mose.Rossi@unibz.it	0000
726	Vittoria	Scorpio	+39	0471 017690	Vittoria.Scorpio@unibz.it	0000
727	Marco	Signorini	+39	0471 017870	Marco.Signorini@unibz.it	0000
728	Giulia	Stradiotti	+39	0471 017240	Giulia.Stradiotti1@unibz.it	0000
729	Prudence	FleurTchouakeuBetnga	+39	0471 017254	PrudenceFleur.TchouakeuBetnga@unibz.it	0000
730	Ali	ZeinAlabidenTlais	+39	0471 017778	AliZeinAlabiden.Tlais@unibz.it	0000
732	Simon	Tscholl	\N	\N	Simon.Tscholl@unibz.it	0000
733	Walter	Waldner	\N	\N	Walter.Waldner@unibz.it	0000
734	Ariele	Zanfei	+39	0471 017234	Ariele.Zanfei@unibz.it	0000
736	Luigi	Alberti	+39	0471 017815	Luigi.Alberti@unibz.it	0000
737	Andrea	Antonello	+39	0471 017633	Andrea.Antonello@unibz.it	0000
738	Franco	Antoniazzi	\N	\N	Franco.Antoniazzi@unibz.it	0000
739	Filippo	Arfini	\N	\N	Filippo.Arfini@unibz.it	0000
740	Paolo	Baggio	\N	\N	Paolo.Baggio@unibz.it	0000
742	Lorenzo	Battisti	\N	\N	Lorenzo.Battisti@unibz.it	0000
743	Roberto	Belotti	+39	0471 017760	Roberto.Belotti@unibz.it	0000
744	Assunta	Bertaccini	\N	\N	Assunta.Bertaccini@unibz.it	0000
746	Gian	BattistaBischetti	\N	\N	GianBattista.Bischetti@unibz.it	0000
747	Fabrizio	Bottacin	\N	\N	Fabrizio.Bottacin@unibz.it	0000
748	Furio	Brighenti	\N	\N	Furio.Brighenti@unibz.it	0000
749	Oreste	SalvatoreBursi	\N	\N	OresteSalvatore.Bursi@unibz.it	0000
750	Sonia	Calligaris	\N	\N	Sonia.Calligaris@unibz.it	0000
751	Nicola	Casari	\N	\N	Nicola.Casari@unibz.it	0000
752	Elisa	Castellarin	\N	\N	Elisa.Castellarin@unibz.it	0000
753	Raffaele	Cavalli	\N	\N	Raffaele.Cavalli@unibz.it	0000
754	Renata	Cavosi	\N	\N	RCavosiSilbernagl@unibz.it	0000
755	Samira	Chizzali	\N	\N	Samira.Chizzali@unibz.it	0000
756	Fabrizio	Costa	\N	\N	Fabrizio.Costa1@unibz.it	0000
757	Daniele	DelRio	\N	\N	Daniele.DelRio@unibz.it	0000
758	Claudio	DellaVolpe	\N	\N	Claudio.DellaVolpe@unibz.it	0000
759	Andrea	Dell'Agnese	+39	0471 017603	andrea.dellagnese@unibz.it	0000
760	Luca	Dondini	\N	\N	Luca.Dondini@unibz.it	0000
761	Lukas	EgarterVigl	\N	\N	Lukas.EgarterVigl1@unibz.it	0000
762	Maurizio	Fauri	\N	\N	Maurizio.Fauri@unibz.it	0000
763	Elda	Favari	\N	\N	Elda.Favari@unibz.it	0000
764	Ivan	Ferretti	\N	\N	Ivan.Ferretti@unibz.it	0000
765	Stefano	Filacorda	\N	\N	Stefano.Filacorda@unibz.it	0000
766	Luca	Fiori	\N	\N	Luca.Fiori@unibz.it	0000
767	Emanuele	Fornasiero	\N	\N	Emanuele.Fornasiero@unibz.it	0000
768	Vittorio	Franzellin	+39	0471 017111	vittorio.franzellin@unibz.it	0000
769	Davide	Geneletti	\N	\N	Davide.Geneletti@unibz.it	0000
770	Lorenzo	Giovannini	+39	0471 013288	lorenzo.giovannini@unibz.it	0000
771	Carlo	Gorla	\N	\N	Carlo.Gorla@unibz.it	0000
772	Matteo	Graiff	\N	\N	Matteo.Graiff@unibz.it	0000
773	Carlo	Gregoretti	\N	\N	Carlo.Gregoretti@unibz.it	0000
774	Maurizio	Grigiante	\N	\N	Maurizio.Grigiante@unibz.it	0000
775	Elisabeth	Gsottbauer	\N	\N	Elisabeth.Gsottbauer@unibz.it	0000
776	Rino	Gubiani	\N	\N	Rino.Gubiani1@unibz.it	0000
777	Manuel	Holzner	\N	\N	Manuel.Holzner@unibz.it	0000
778	Giorgio	Honsell	\N	\N	Giorgio.Honsell@unibz.it	0000
780	Markus	Kelderer	+39	0471 017091	Markus.Kelderer@unibz.it	0000
781	Alessia	Levante	\N	\N	Alessia.Levante@unibz.it	0000
782	Sandro	Liberatori	\N	\N	Sandro.Liberatori@unibz.it	0000
783	Volkmar	Mair	\N	\N	Volkmar.Mair@unibz.it	0000
784	Alessio	Malandruccolo	\N	\N	Alessio.Malandruccolo@unibz.it	0000
785	Lara	Manzocco	\N	\N	Lara.Manzocco@unibz.it	0000
786	Mauro	Masiero	\N	\N	Mauro.Masiero@unibz.it	0000
787	Pedro	MiguelMenaParreno	\N	\N	PedroMiguel.MenaParreno@unibz.it	0000
788	Pier	PaoloMiglietta	\N	\N	PierPaolo.Miglietta@unibz.it	0000
789	Thomas	FranzXaverMoosbrugger	\N	\N	ThomasFranzXaver.Moosbrugger@unibz.it	0000
790	Sabrina	Moret	\N	\N	Sabrina.Moret@unibz.it	0000
792	Stefano	Nuzzo	\N	\N	Stefano.Nuzzo@unibz.it	0000
793	Michael	Oberhuber	\N	\N	Michael.oberhuber2@unibz.it	0000
794	Fabian	ErnstOchs	\N	\N	FabianErnst.Ochs@unibz.it	0000
795	Paola	CarmelaPagliara	\N	\N	PaolaCarmela.Pagliara@unibz.it	0000
796	Fabio	Palmeri	\N	\N	Fabio.Palmeri@unibz.it	0000
797	Maria	Pantano	\N	\N	Maria.Pantano@unibz.it	0000
799	Giovanni	Peratoner	\N	\N	Giovanni.Peratoner@unibz.it	0000
800	Alessandro	Prada	+39	0471 017204	Alessandro.Prada@unibz.it	0000
801	Alberto	Prandi	\N	\N	Alberto.Prandi@unibz.it	0000
803	Stefano	Rossi	+39	0471 017091	Stefano.Rossi@unibz.it	0000
805	Carlo	MariaRozziDeHieronymis	\N	\N	CarloMaria.RozziDeHieronymis@unibz.it	0000
806	Pasquale	RussoSpena	+39	0471 017112	pasquale.russospena@unibz.it	0000
807	Marco	Sartor	\N	\N	Marco.Sartor@unibz.it	0000
808	Paolo	Scardi	\N	\N	Paolo.Scardi@unibz.it	0000
810	Anton	Soppelsa	\N	\N	Anton.Soppelsa@unibz.it	0000
811	Martin	H.Spitzner	\N	\N	.Spitzner@unibz.it	0000
812	Chiara	Tardini	\N	\N	Chiara.Tardini@unibz.it	0000
813	Thomas	Thaler	\N	\N	Thomas.Thaler@unibz.it	0000
814	Nicola	Tondini	\N	\N	Nicola.Tondini@unibz.it	0000
815	Marco	Unterhofer	\N	\N	Marco.Unterhofer@unibz.it	0000
816	Hans	KarlWytrzens	+39	0471 013278	HansKarl.Wytrzens@unibz.it	0000
817	Hartmut	Zadek	\N	\N	Hartmut.Zadek@unibz.it	0000
818	Angelo	Zanella	+39	0471 017091	Angelo.Zanella@unibz.it	0000
819	Simone	Zanoni	\N	\N	Simone.Zanoni@unibz.it	0000
820	Dino	Zardi	\N	\N	Dino.Zardi@unibz.it	0000
822	Andreas	Zwölfer	\N	\N	Andreas.Zwoelfer@unibz.it	0000
823	Jacopo	CarloAlberizzi	+39	0471 017787	JacopoCarlo.Alberizzi@unibz.it	0000
824	Monica	YorladyAlzateZuluaga	\N	\N	MonicaYorlady.AlzateZuluaga@unibz.it	0000
825	Verena	Angerer	+39	0471 017828	Verena.Angerer@unibz.it	0000
826	Daniele	Antolini	+39	0471 017743	Daniele.Antolini@unibz.it	0000
827	Dolores	Asensio	\N	\N	MariaDolores.AsensioAbella@unibz.it	0000
828	Matteo	Beligoj	\N	\N	Matteo.Beligoj@unibz.it	0000
829	Vittoria	Benedetti	+39	0471 017706	Vittoria.Benedetti@unibz.it	0000
830	Stefano	Brighenti	\N	\N	Stefano.Brighenti@unibz.it	0000
832	Federica	Catania	\N	\N	Federica.Catania@unibz.it	0000
833	Manuela	Ciocca	\N	\N	Manuela.Ciocca@unibz.it	0000
834	Eleonora	Cordioli	+39	0471 017739	Eleonora.Cordioli@unibz.it	0000
835	Erika	Corretto	+39	\N	Erika.Corretto@unibz.it	0000
836	Martina	AuroraCostaAngeli	\N	\N	MartinaAurora.CostaAngeli@unibz.it	0000
837	Matteo	DeMarchi	\N	\N	Matteo.DeMarchi@unibz.it	0000
838	Marcos	Dieste	\N	\N	Marcos.Dieste@unibz.it	0000
839	Jessica	Dittmer	\N	\N	Jessica.Dittmer@unibz.it	0000
840	Simone	Dugaria	+39	0471 017846	Simone.Dugaria@unibz.it	0000
841	Wilson	JoséFernandesLemosJunior	\N	\N	WilsonJose.FernandesLemosJunior@unibz.it	0000
842	Giuseppina	MariaFiorino	\N	\N	GiuseppinaMaria.Fiorino@unibz.it	0000
843	Lorenzo	Fraccaroli	+39	\N	Lorenzo.Fraccaroli@unibz.it	0000
845	Francesco	Giammarchi	+39	0471 017611	Francesco.Giammarchi@unibz.it	0000
846	Ganesh	Govindarajan	\N	\N	Ganesh.Govindarajan@unibz.it	0000
847	Antonella	LucianaGrosso	\N	\N	AntonellaLuciana.Grosso@unibz.it	0000
848	Luca	Gualtieri	+39	0471 017124	Luca.Gualtieri@unibz.it	0000
849	Daniele	Gusmerotti	\N	\N	Daniele.Gusmerotti@unibz.it	0000
850	Md	AzizulHaque	+39	0471 017772	MdAzizul.Haque@unibz.it	0000
851	Ehtisham	UlHasan	+39	0471 017855	EhtishamUl.Hasan@unibz.it	0000
852	Greta	Höller	+39	0471 017000	Greta.Hoeller@unibz.it	0000
853	Johannes	Holzner	\N	\N	Johannes.Holzner@unibz.it	0000
854	Pietro	Ibba	+39	0471 017773	Pietro.Ibba@unibz.it	0000
855	Sebastian	Imperiale	+39	0471 017251	Sebastian.Imperiale@unibz.it	0000
856	Sadia	Kanwal	\N	\N	Sadia.Kanwal@unibz.it	0000
857	Mallikarjun	Madagalam	\N	\N	Mallikarjun.Madagalam@unibz.it	0000
859	Benedikt	GregorMark	+39	0471 017231	BenediktGregor.Mark@unibz.it	0000
860	Arianna	Marzi	+39	\N	Arianna.Marzi@unibz.it	0000
862	Andrea	Mercusa	\N	\N	Andrea.Mercusa@unibz.it	0000
863	Vakare	Merkyte	+39	0471 017774	Vakare.Merkyte1@unibz.it	0000
865	Federica	Morandi	\N	\N	Federica.Morandi@unibz.it	0000
866	Francesco	FabioNicolosi	+39	0471 017793	FrancescoFabio.Nicolosi@unibz.it	0000
867	Matteo	Pecchi	+39	0471 017669	Matteo.Pecchi@unibz.it	0000
868	Mattia	Petrelli	+39	0471 017856	Mattia.Petrelli@unibz.it	0000
869	Stefano	Piazzi	+39	0471 017794	Stefano.Piazzi@unibz.it	0000
870	Ilaria	Pittana	\N	\N	Ilaria.Pittana@unibz.it	0000
871	Ivan	Polsinelli	+39	\N	Ivan.Polsinelli@unibz.it	0000
872	Thanalai	Poonsiri	\N	\N	Thanalai.Poonsiri@unibz.it	0000
873	Ioanna	Poulopoulou	+39	0471 017746	Ioanna.Poulopoulou@unibz.it	0000
874	Anna	Prati	+39	0471 017796	Anna.Prati1@unibz.it	0000
875	Andrea	Revolti	+39	0471 017157	Andrea.Revolti@unibz.it	0000
876	Rafael	AngelRojasCordova	+39	0471 017125	RafaelAngel.RojasCordova@unibz.it	0000
877	Giuseppe	Romano	\N	\N	Giuseppe.Romano2@unibz.it	0000
878	Raza	Saeed	\N	\N	raza.saeed@unibz.it	0000
879	Madhanraj	SalemSrinivasan	\N	\N	Madhanraj.SalemSrinivasan@unibz.it	0000
880	Alexander	Seliger	\N	\N	Alexander.Seliger@unibz.it	0000
881	Nilendu	Senzacognome	\N	\N	Nilendu.Senzacognome@unibz.it	0000
882	Liliia	Serbina	\N	\N	Liliia.Serbina@unibz.it	0000
883	Maurizio	Tavelli	+39	0471 017812	Maurizio.Tavelli@unibz.it	0000
884	Raphael	Tiziani	+39	0471 017777	Raphael.Tiziani2@unibz.it	0000
885	Giacomo	Tomasi	\N	\N	Giacomo.Tomasi@unibz.it	0000
886	Enrico	Tomelleri	\N	\N	Enrico.Tomelleri@unibz.it	0000
887	Simon	JosefUnterholzner	\N	\N	SimonJosef.Unterholzner@unibz.it	0000
889	Luca	Zaniboni	+39	0471 017735	Luca.Zaniboni1@unibz.it	0000
890	Thomas	Zanon	+39	\N	Thomas.Zanon@unibz.it	0000
\.


--
-- Data for Name: vote; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.vote (id, date, "time", value, users, post) FROM stdin;
\.


--
-- Name: comment_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.comment_id_seq', 1, false);


--
-- Name: conversation_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.conversation_id_seq', 1, false);


--
-- Name: faculty_code_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.faculty_code_seq', 5, true);


--
-- Name: photo_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.photo_id_seq', 1, false);


--
-- Name: post_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.post_id_seq', 1, false);


--
-- Name: program_code_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.program_code_seq', 47, true);


--
-- Name: sendsmessageto_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.sendsmessageto_id_seq', 1, false);


--
-- Name: session_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.session_id_seq', 1, false);


--
-- Name: subject_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.subject_id_seq', 863, true);


--
-- Name: tag_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.tag_id_seq', 1, false);


--
-- Name: users_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.users_id_seq', 890, true);


--
-- Name: vote_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.vote_id_seq', 1, false);


--
-- Name: answer answer_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.answer
    ADD CONSTRAINT answer_pkey PRIMARY KEY (id);


--
-- Name: article article_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.article
    ADD CONSTRAINT article_pkey PRIMARY KEY (id);


--
-- Name: comment comment_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comment
    ADD CONSTRAINT comment_pkey PRIMARY KEY (id);


--
-- Name: conversation conversation_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.conversation
    ADD CONSTRAINT conversation_pkey PRIMARY KEY (id);


--
-- Name: faculty faculty_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.faculty
    ADD CONSTRAINT faculty_name_key UNIQUE (name);


--
-- Name: faculty faculty_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.faculty
    ADD CONSTRAINT faculty_pkey PRIMARY KEY (code);


--
-- Name: hastag hastag_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.hastag
    ADD CONSTRAINT hastag_pkey PRIMARY KEY (tag, post);


--
-- Name: partecipatesinconversation partecipatesinconversation_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.partecipatesinconversation
    ADD CONSTRAINT partecipatesinconversation_pkey PRIMARY KEY (conversation, users);


--
-- Name: photo photo_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.photo
    ADD CONSTRAINT photo_pkey PRIMARY KEY (id);


--
-- Name: taught_in pk_taught_in; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.taught_in
    ADD CONSTRAINT pk_taught_in PRIMARY KEY (subject, program);


--
-- Name: teaches pk_teaches; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.teaches
    ADD CONSTRAINT pk_teaches PRIMARY KEY (professor, subject);


--
-- Name: post post_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.post
    ADD CONSTRAINT post_pkey PRIMARY KEY (id);


--
-- Name: professor professor_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.professor
    ADD CONSTRAINT professor_pkey PRIMARY KEY (id);


--
-- Name: program program_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.program
    ADD CONSTRAINT program_name_key UNIQUE (name);


--
-- Name: program program_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.program
    ADD CONSTRAINT program_pkey PRIMARY KEY (code);


--
-- Name: question question_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.question
    ADD CONSTRAINT question_pkey PRIMARY KEY (id);


--
-- Name: sendsmessageto sendsmessageto_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sendsmessageto
    ADD CONSTRAINT sendsmessageto_pkey PRIMARY KEY (id);


--
-- Name: session sessionpks; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.session
    ADD CONSTRAINT sessionpks PRIMARY KEY (id, users);


--
-- Name: student student_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.student
    ADD CONSTRAINT student_pkey PRIMARY KEY (id);


--
-- Name: subject subject_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.subject
    ADD CONSTRAINT subject_name_key UNIQUE (name);


--
-- Name: subject subject_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.subject
    ADD CONSTRAINT subject_pkey PRIMARY KEY (id);


--
-- Name: tag tag_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.tag
    ADD CONSTRAINT tag_pkey PRIMARY KEY (id);


--
-- Name: users users_mail_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_mail_key UNIQUE (mail);


--
-- Name: users users_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_pkey PRIMARY KEY (id);


--
-- Name: vote vote_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.vote
    ADD CONSTRAINT vote_pkey PRIMARY KEY (id);


--
-- Name: comment check_login_comment; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER check_login_comment BEFORE INSERT OR DELETE OR UPDATE ON public.comment FOR EACH ROW EXECUTE FUNCTION public.is_user_logged_in();


--
-- Name: partecipatesinconversation check_login_partecipatesinconversation; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER check_login_partecipatesinconversation BEFORE INSERT OR DELETE OR UPDATE ON public.partecipatesinconversation FOR EACH ROW EXECUTE FUNCTION public.is_user_logged_in();


--
-- Name: post check_login_post; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER check_login_post BEFORE INSERT OR DELETE OR UPDATE ON public.post FOR EACH ROW EXECUTE FUNCTION public.is_user_logged_in();


--
-- Name: sendsmessageto check_login_sendsmessageto; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER check_login_sendsmessageto BEFORE INSERT OR DELETE OR UPDATE ON public.sendsmessageto FOR EACH ROW EXECUTE FUNCTION public.is_user_logged_in();


--
-- Name: vote check_login_vote; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER check_login_vote BEFORE INSERT OR DELETE OR UPDATE ON public.vote FOR EACH ROW EXECUTE FUNCTION public.is_user_logged_in();


--
-- Name: answer insert_answer; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER insert_answer BEFORE INSERT ON public.answer FOR EACH ROW EXECUTE FUNCTION public.insertanswer();


--
-- Name: article insert_article; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER insert_article BEFORE INSERT ON public.article FOR EACH ROW EXECUTE FUNCTION public.insertarticle();


--
-- Name: professor insert_professor; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER insert_professor BEFORE INSERT ON public.professor FOR EACH ROW EXECUTE FUNCTION public.insertprofessor();


--
-- Name: question insert_question; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER insert_question BEFORE INSERT ON public.question FOR EACH ROW EXECUTE FUNCTION public.insertquestion();


--
-- Name: student insert_student; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER insert_student BEFORE INSERT ON public.student FOR EACH ROW EXECUTE FUNCTION public.insertstudent();


--
-- Name: answer answer_is_a_post; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.answer
    ADD CONSTRAINT answer_is_a_post FOREIGN KEY (id) REFERENCES public.post(id) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: article article_is_a_post; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.article
    ADD CONSTRAINT article_is_a_post FOREIGN KEY (id) REFERENCES public.post(id) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: comment commentbelongstouser; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comment
    ADD CONSTRAINT commentbelongstouser FOREIGN KEY (users) REFERENCES public.users(id) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: comment commentisputonpost; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comment
    ADD CONSTRAINT commentisputonpost FOREIGN KEY (post) REFERENCES public.post(id) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: program faculty_isfkinprogram; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.program
    ADD CONSTRAINT faculty_isfkinprogram FOREIGN KEY (faculty) REFERENCES public.faculty(code) ON UPDATE CASCADE ON DELETE RESTRICT DEFERRABLE INITIALLY DEFERRED;


--
-- Name: sendsmessageto message_belongs_to_user; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sendsmessageto
    ADD CONSTRAINT message_belongs_to_user FOREIGN KEY (users) REFERENCES public.users(id) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: sendsmessageto message_is_sent_in_conversation; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sendsmessageto
    ADD CONSTRAINT message_is_sent_in_conversation FOREIGN KEY (conversation) REFERENCES public.conversation(id) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: photo photobelongstoarticle; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.photo
    ADD CONSTRAINT photobelongstoarticle FOREIGN KEY (article) REFERENCES public.article(id) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hastag post_is_fk_in_hastag; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.hastag
    ADD CONSTRAINT post_is_fk_in_hastag FOREIGN KEY (tag) REFERENCES public.tag(id) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: post postbelongstouser; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.post
    ADD CONSTRAINT postbelongstouser FOREIGN KEY (users) REFERENCES public.users(id) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: professor professor_is_a_user; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.professor
    ADD CONSTRAINT professor_is_a_user FOREIGN KEY (id) REFERENCES public.users(id) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: teaches professor_is_fk_in_teaches; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.teaches
    ADD CONSTRAINT professor_is_fk_in_teaches FOREIGN KEY (professor) REFERENCES public.professor(id) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: student programisinstudent; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.student
    ADD CONSTRAINT programisinstudent FOREIGN KEY (program) REFERENCES public.program(code) ON UPDATE CASCADE ON DELETE RESTRICT DEFERRABLE INITIALLY DEFERRED;


--
-- Name: question question_is_a_post; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.question
    ADD CONSTRAINT question_is_a_post FOREIGN KEY (id) REFERENCES public.post(id) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: answer questionid_isfkinanswer; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.answer
    ADD CONSTRAINT questionid_isfkinanswer FOREIGN KEY (question_id) REFERENCES public.question(id) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: student student_is_a_user; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.student
    ADD CONSTRAINT student_is_a_user FOREIGN KEY (id) REFERENCES public.users(id) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: teaches subject_is_fk_in_teaches; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.teaches
    ADD CONSTRAINT subject_is_fk_in_teaches FOREIGN KEY (subject) REFERENCES public.subject(id) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: taught_in subject_ispkintaughtin; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.taught_in
    ADD CONSTRAINT subject_ispkintaughtin FOREIGN KEY (subject) REFERENCES public.subject(id) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: hastag tag_is_fk_in_hastag; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.hastag
    ADD CONSTRAINT tag_is_fk_in_hastag FOREIGN KEY (tag) REFERENCES public.tag(id) ON UPDATE CASCADE ON DELETE RESTRICT DEFERRABLE INITIALLY DEFERRED;


--
-- Name: session userisfk_insession; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.session
    ADD CONSTRAINT userisfk_insession FOREIGN KEY (users) REFERENCES public.users(id) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: vote votebelongstouser; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.vote
    ADD CONSTRAINT votebelongstouser FOREIGN KEY (users) REFERENCES public.users(id) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- Name: vote voteisputonpost; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.vote
    ADD CONSTRAINT voteisputonpost FOREIGN KEY (post) REFERENCES public.post(id) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;


--
-- PostgreSQL database dump complete
--

